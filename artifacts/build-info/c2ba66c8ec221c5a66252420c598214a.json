{
	"id": "c2ba66c8ec221c5a66252420c598214a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/RomanToInteger.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract RomanToInteger {\r\n    function toInteger(string calldata roman) external pure returns (uint256 value) {\r\n        bytes memory s = bytes(roman);\r\n        require(s.length > 0, \"Empty string\");\r\n\r\n        // 辅助函数：单个字符转数值\r\n        for (uint256 i = 0; i < s.length; i++) {\r\n            uint256 curr = _valueOf(s[i]);\r\n            require(curr > 0, \"Invalid Roman char\");\r\n\r\n            uint256 next = 0;\r\n            if (i + 1 < s.length) {\r\n                next = _valueOf(s[i + 1]);\r\n                require(next > 0, \"Invalid Roman char\");\r\n            }\r\n\r\n            // 如果当前值 < 下一个值，说明是减法组合，如 IV(4)\r\n            if (next > curr) {\r\n                value += (next - curr);\r\n                i++; // 跳过下一个\r\n            } else {\r\n                value += curr;\r\n            }\r\n        }\r\n        // 范围约束（传统罗马数字 1..3999）\r\n        require(value > 0 && value <= 3999, \"Out of range\");\r\n    }\r\n\r\n    // 将单个罗马字符转为对应数值\r\n    function _valueOf(bytes1 c) internal pure returns (uint256) {\r\n        if (c == \"I\") return 1;\r\n        if (c == \"V\") return 5;\r\n        if (c == \"X\") return 10;\r\n        if (c == \"L\") return 50;\r\n        if (c == \"C\") return 100;\r\n        if (c == \"D\") return 500;\r\n        if (c == \"M\") return 1000;\r\n        return 0; // 非法字符\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/RomanToInteger.sol": {
				"RomanToInteger": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "roman",
									"type": "string"
								}
							],
							"name": "toInteger",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/RomanToInteger.sol\":60:1453  contract RomanToInteger {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/RomanToInteger.sol\":60:1453  contract RomanToInteger {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x84df599f\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/RomanToInteger.sol\":91:1051  function toInteger(string calldata roman) external pure returns (uint256 value) {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"contracts/RomanToInteger.sol\":156:169  uint256 value */\n      0x00\n        /* \"contracts/RomanToInteger.sol\":182:196  bytes memory s */\n      dup1\n        /* \"contracts/RomanToInteger.sol\":205:210  roman */\n      dup4\n      dup4\n        /* \"contracts/RomanToInteger.sol\":182:211  bytes memory s = bytes(roman) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup2\n      dup5\n      add\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      swap1\n      pop\n      dup1\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/RomanToInteger.sol\":241:242  0 */\n      0x00\n        /* \"contracts/RomanToInteger.sol\":230:231  s */\n      dup2\n        /* \"contracts/RomanToInteger.sol\":230:238  s.length */\n      mload\n        /* \"contracts/RomanToInteger.sol\":230:242  s.length > 0 */\n      gt\n        /* \"contracts/RomanToInteger.sol\":222:259  require(s.length > 0, \"Empty string\") */\n      tag_11\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_12\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_11:\n        /* \"contracts/RomanToInteger.sol\":326:335  uint256 i */\n      0x00\n        /* \"contracts/RomanToInteger.sol\":321:925  for (uint256 i = 0; i < s.length; i++) {... */\n    tag_14:\n        /* \"contracts/RomanToInteger.sol\":345:346  s */\n      dup2\n        /* \"contracts/RomanToInteger.sol\":345:353  s.length */\n      mload\n        /* \"contracts/RomanToInteger.sol\":341:342  i */\n      dup2\n        /* \"contracts/RomanToInteger.sol\":341:353  i < s.length */\n      lt\n        /* \"contracts/RomanToInteger.sol\":321:925  for (uint256 i = 0; i < s.length; i++) {... */\n      iszero\n      tag_15\n      jumpi\n        /* \"contracts/RomanToInteger.sol\":375:387  uint256 curr */\n      0x00\n        /* \"contracts/RomanToInteger.sol\":390:404  _valueOf(s[i]) */\n      tag_17\n        /* \"contracts/RomanToInteger.sol\":399:400  s */\n      dup4\n        /* \"contracts/RomanToInteger.sol\":401:402  i */\n      dup4\n        /* \"contracts/RomanToInteger.sol\":399:403  s[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_18\n      jumpi\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n    tag_18:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"contracts/RomanToInteger.sol\":390:398  _valueOf */\n      tag_21\n        /* \"contracts/RomanToInteger.sol\":390:404  _valueOf(s[i]) */\n      jump\t// in\n    tag_17:\n        /* \"contracts/RomanToInteger.sol\":375:404  uint256 curr = _valueOf(s[i]) */\n      swap1\n      pop\n        /* \"contracts/RomanToInteger.sol\":434:435  0 */\n      0x00\n        /* \"contracts/RomanToInteger.sol\":427:431  curr */\n      dup2\n        /* \"contracts/RomanToInteger.sol\":427:435  curr > 0 */\n      gt\n        /* \"contracts/RomanToInteger.sol\":419:458  require(curr > 0, \"Invalid Roman char\") */\n      tag_22\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_23\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_22:\n        /* \"contracts/RomanToInteger.sol\":475:487  uint256 next */\n      0x00\n        /* \"contracts/RomanToInteger.sol\":518:519  s */\n      dup4\n        /* \"contracts/RomanToInteger.sol\":518:526  s.length */\n      mload\n        /* \"contracts/RomanToInteger.sol\":514:515  1 */\n      0x01\n        /* \"contracts/RomanToInteger.sol\":510:511  i */\n      dup5\n        /* \"contracts/RomanToInteger.sol\":510:515  i + 1 */\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"contracts/RomanToInteger.sol\":510:526  i + 1 < s.length */\n      lt\n        /* \"contracts/RomanToInteger.sol\":506:646  if (i + 1 < s.length) {... */\n      iszero\n      tag_27\n      jumpi\n        /* \"contracts/RomanToInteger.sol\":554:572  _valueOf(s[i + 1]) */\n      tag_28\n        /* \"contracts/RomanToInteger.sol\":563:564  s */\n      dup5\n        /* \"contracts/RomanToInteger.sol\":569:570  1 */\n      0x01\n        /* \"contracts/RomanToInteger.sol\":565:566  i */\n      dup6\n        /* \"contracts/RomanToInteger.sol\":565:570  i + 1 */\n      tag_29\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_29:\n        /* \"contracts/RomanToInteger.sol\":563:571  s[i + 1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_30\n      jumpi\n      tag_31\n      tag_20\n      jump\t// in\n    tag_31:\n    tag_30:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"contracts/RomanToInteger.sol\":554:562  _valueOf */\n      tag_21\n        /* \"contracts/RomanToInteger.sol\":554:572  _valueOf(s[i + 1]) */\n      jump\t// in\n    tag_28:\n        /* \"contracts/RomanToInteger.sol\":547:572  next = _valueOf(s[i + 1]) */\n      swap1\n      pop\n        /* \"contracts/RomanToInteger.sol\":606:607  0 */\n      0x00\n        /* \"contracts/RomanToInteger.sol\":599:603  next */\n      dup2\n        /* \"contracts/RomanToInteger.sol\":599:607  next > 0 */\n      gt\n        /* \"contracts/RomanToInteger.sol\":591:630  require(next > 0, \"Invalid Roman char\") */\n      tag_32\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_33\n      swap1\n      tag_24\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_32:\n        /* \"contracts/RomanToInteger.sol\":506:646  if (i + 1 < s.length) {... */\n    tag_27:\n        /* \"contracts/RomanToInteger.sol\":756:760  curr */\n      dup2\n        /* \"contracts/RomanToInteger.sol\":749:753  next */\n      dup2\n        /* \"contracts/RomanToInteger.sol\":749:760  next > curr */\n      gt\n        /* \"contracts/RomanToInteger.sol\":745:914  if (next > curr) {... */\n      iszero\n      tag_34\n      jumpi\n        /* \"contracts/RomanToInteger.sol\":798:802  curr */\n      dup2\n        /* \"contracts/RomanToInteger.sol\":791:795  next */\n      dup2\n        /* \"contracts/RomanToInteger.sol\":791:802  next - curr */\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"contracts/RomanToInteger.sol\":781:803  value += (next - curr) */\n      dup6\n      tag_37\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_37:\n      swap5\n      pop\n        /* \"contracts/RomanToInteger.sol\":822:825  i++ */\n      dup3\n      dup1\n      tag_38\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      swap4\n      pop\n      pop\n        /* \"contracts/RomanToInteger.sol\":745:914  if (next > curr) {... */\n      jump(tag_40)\n    tag_34:\n        /* \"contracts/RomanToInteger.sol\":894:898  curr */\n      dup2\n        /* \"contracts/RomanToInteger.sol\":885:898  value += curr */\n      dup6\n      tag_41\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_41:\n      swap5\n      pop\n        /* \"contracts/RomanToInteger.sol\":745:914  if (next > curr) {... */\n    tag_40:\n        /* \"contracts/RomanToInteger.sol\":360:925  {... */\n      pop\n      pop\n        /* \"contracts/RomanToInteger.sol\":355:358  i++ */\n      dup1\n      dup1\n      tag_42\n      swap1\n      tag_39\n      jump\t// in\n    tag_42:\n      swap2\n      pop\n      pop\n        /* \"contracts/RomanToInteger.sol\":321:925  for (uint256 i = 0; i < s.length; i++) {... */\n      jump(tag_14)\n    tag_15:\n      pop\n        /* \"contracts/RomanToInteger.sol\":1008:1009  0 */\n      0x00\n        /* \"contracts/RomanToInteger.sol\":1000:1005  value */\n      dup3\n        /* \"contracts/RomanToInteger.sol\":1000:1009  value > 0 */\n      gt\n        /* \"contracts/RomanToInteger.sol\":1000:1026  value > 0 && value <= 3999 */\n      dup1\n      iszero\n      tag_43\n      jumpi\n      pop\n        /* \"contracts/RomanToInteger.sol\":1022:1026  3999 */\n      0x0f9f\n        /* \"contracts/RomanToInteger.sol\":1013:1018  value */\n      dup3\n        /* \"contracts/RomanToInteger.sol\":1013:1026  value <= 3999 */\n      gt\n      iszero\n        /* \"contracts/RomanToInteger.sol\":1000:1026  value > 0 && value <= 3999 */\n    tag_43:\n        /* \"contracts/RomanToInteger.sol\":992:1043  require(value > 0 && value <= 3999, \"Out of range\") */\n      tag_44\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_45\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_44:\n        /* \"contracts/RomanToInteger.sol\":171:1051  {... */\n      pop\n        /* \"contracts/RomanToInteger.sol\":91:1051  function toInteger(string calldata roman) external pure returns (uint256 value) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/RomanToInteger.sol\":1107:1450  function _valueOf(bytes1 c) internal pure returns (uint256) {... */\n    tag_21:\n        /* \"contracts/RomanToInteger.sol\":1158:1165  uint256 */\n      0x00\n        /* \"contracts/RomanToInteger.sol\":1182:1190  c == \"I\" */\n      0x4900000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInteger.sol\":1182:1183  c */\n      dup3\n        /* \"contracts/RomanToInteger.sol\":1182:1190  c == \"I\" */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub\n        /* \"contracts/RomanToInteger.sol\":1178:1200  if (c == \"I\") return 1 */\n      tag_48\n      jumpi\n        /* \"contracts/RomanToInteger.sol\":1199:1200  1 */\n      0x01\n        /* \"contracts/RomanToInteger.sol\":1192:1200  return 1 */\n      swap1\n      pop\n      jump(tag_47)\n        /* \"contracts/RomanToInteger.sol\":1178:1200  if (c == \"I\") return 1 */\n    tag_48:\n        /* \"contracts/RomanToInteger.sol\":1215:1223  c == \"V\" */\n      0x5600000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInteger.sol\":1215:1216  c */\n      dup3\n        /* \"contracts/RomanToInteger.sol\":1215:1223  c == \"V\" */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub\n        /* \"contracts/RomanToInteger.sol\":1211:1233  if (c == \"V\") return 5 */\n      tag_49\n      jumpi\n        /* \"contracts/RomanToInteger.sol\":1232:1233  5 */\n      0x05\n        /* \"contracts/RomanToInteger.sol\":1225:1233  return 5 */\n      swap1\n      pop\n      jump(tag_47)\n        /* \"contracts/RomanToInteger.sol\":1211:1233  if (c == \"V\") return 5 */\n    tag_49:\n        /* \"contracts/RomanToInteger.sol\":1248:1256  c == \"X\" */\n      0x5800000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInteger.sol\":1248:1249  c */\n      dup3\n        /* \"contracts/RomanToInteger.sol\":1248:1256  c == \"X\" */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub\n        /* \"contracts/RomanToInteger.sol\":1244:1267  if (c == \"X\") return 10 */\n      tag_50\n      jumpi\n        /* \"contracts/RomanToInteger.sol\":1265:1267  10 */\n      0x0a\n        /* \"contracts/RomanToInteger.sol\":1258:1267  return 10 */\n      swap1\n      pop\n      jump(tag_47)\n        /* \"contracts/RomanToInteger.sol\":1244:1267  if (c == \"X\") return 10 */\n    tag_50:\n        /* \"contracts/RomanToInteger.sol\":1282:1290  c == \"L\" */\n      0x4c00000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInteger.sol\":1282:1283  c */\n      dup3\n        /* \"contracts/RomanToInteger.sol\":1282:1290  c == \"L\" */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub\n        /* \"contracts/RomanToInteger.sol\":1278:1301  if (c == \"L\") return 50 */\n      tag_51\n      jumpi\n        /* \"contracts/RomanToInteger.sol\":1299:1301  50 */\n      0x32\n        /* \"contracts/RomanToInteger.sol\":1292:1301  return 50 */\n      swap1\n      pop\n      jump(tag_47)\n        /* \"contracts/RomanToInteger.sol\":1278:1301  if (c == \"L\") return 50 */\n    tag_51:\n        /* \"contracts/RomanToInteger.sol\":1316:1324  c == \"C\" */\n      0x4300000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInteger.sol\":1316:1317  c */\n      dup3\n        /* \"contracts/RomanToInteger.sol\":1316:1324  c == \"C\" */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub\n        /* \"contracts/RomanToInteger.sol\":1312:1336  if (c == \"C\") return 100 */\n      tag_52\n      jumpi\n        /* \"contracts/RomanToInteger.sol\":1333:1336  100 */\n      0x64\n        /* \"contracts/RomanToInteger.sol\":1326:1336  return 100 */\n      swap1\n      pop\n      jump(tag_47)\n        /* \"contracts/RomanToInteger.sol\":1312:1336  if (c == \"C\") return 100 */\n    tag_52:\n        /* \"contracts/RomanToInteger.sol\":1351:1359  c == \"D\" */\n      0x4400000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInteger.sol\":1351:1352  c */\n      dup3\n        /* \"contracts/RomanToInteger.sol\":1351:1359  c == \"D\" */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub\n        /* \"contracts/RomanToInteger.sol\":1347:1371  if (c == \"D\") return 500 */\n      tag_53\n      jumpi\n        /* \"contracts/RomanToInteger.sol\":1368:1371  500 */\n      0x01f4\n        /* \"contracts/RomanToInteger.sol\":1361:1371  return 500 */\n      swap1\n      pop\n      jump(tag_47)\n        /* \"contracts/RomanToInteger.sol\":1347:1371  if (c == \"D\") return 500 */\n    tag_53:\n        /* \"contracts/RomanToInteger.sol\":1386:1394  c == \"M\" */\n      0x4d00000000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/RomanToInteger.sol\":1386:1387  c */\n      dup3\n        /* \"contracts/RomanToInteger.sol\":1386:1394  c == \"M\" */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub\n        /* \"contracts/RomanToInteger.sol\":1382:1407  if (c == \"M\") return 1000 */\n      tag_54\n      jumpi\n        /* \"contracts/RomanToInteger.sol\":1403:1407  1000 */\n      0x03e8\n        /* \"contracts/RomanToInteger.sol\":1396:1407  return 1000 */\n      swap1\n      pop\n      jump(tag_47)\n        /* \"contracts/RomanToInteger.sol\":1382:1407  if (c == \"M\") return 1000 */\n    tag_54:\n        /* \"contracts/RomanToInteger.sol\":1425:1426  0 */\n      0x00\n        /* \"contracts/RomanToInteger.sol\":1418:1426  return 0 */\n      swap1\n      pop\n        /* \"contracts/RomanToInteger.sol\":1107:1450  function _valueOf(bytes1 c) internal pure returns (uint256) {... */\n    tag_47:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_56:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_57:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_58:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:574   */\n    tag_59:\n        /* \"#utility.yul\":566:567   */\n      0x00\n        /* \"#utility.yul\":563:564   */\n      dup1\n        /* \"#utility.yul\":556:568   */\n      revert\n        /* \"#utility.yul\":580:697   */\n    tag_60:\n        /* \"#utility.yul\":689:690   */\n      0x00\n        /* \"#utility.yul\":686:687   */\n      dup1\n        /* \"#utility.yul\":679:691   */\n      revert\n        /* \"#utility.yul\":717:1270   */\n    tag_61:\n        /* \"#utility.yul\":775:783   */\n      0x00\n        /* \"#utility.yul\":785:791   */\n      dup1\n        /* \"#utility.yul\":835:838   */\n      dup4\n        /* \"#utility.yul\":828:832   */\n      0x1f\n        /* \"#utility.yul\":820:826   */\n      dup5\n        /* \"#utility.yul\":816:833   */\n      add\n        /* \"#utility.yul\":812:839   */\n      slt\n        /* \"#utility.yul\":802:924   */\n      tag_80\n      jumpi\n        /* \"#utility.yul\":843:922   */\n      tag_81\n      tag_58\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":802:924   */\n    tag_80:\n        /* \"#utility.yul\":956:962   */\n      dup3\n        /* \"#utility.yul\":943:963   */\n      calldataload\n        /* \"#utility.yul\":933:963   */\n      swap1\n      pop\n        /* \"#utility.yul\":986:1004   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":978:984   */\n      dup2\n        /* \"#utility.yul\":975:1005   */\n      gt\n        /* \"#utility.yul\":972:1089   */\n      iszero\n      tag_82\n      jumpi\n        /* \"#utility.yul\":1008:1087   */\n      tag_83\n      tag_59\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":972:1089   */\n    tag_82:\n        /* \"#utility.yul\":1122:1126   */\n      0x20\n        /* \"#utility.yul\":1114:1120   */\n      dup4\n        /* \"#utility.yul\":1110:1127   */\n      add\n        /* \"#utility.yul\":1098:1127   */\n      swap2\n      pop\n        /* \"#utility.yul\":1176:1179   */\n      dup4\n        /* \"#utility.yul\":1168:1172   */\n      0x01\n        /* \"#utility.yul\":1160:1166   */\n      dup3\n        /* \"#utility.yul\":1156:1173   */\n      mul\n        /* \"#utility.yul\":1146:1154   */\n      dup4\n        /* \"#utility.yul\":1142:1174   */\n      add\n        /* \"#utility.yul\":1139:1180   */\n      gt\n        /* \"#utility.yul\":1136:1264   */\n      iszero\n      tag_84\n      jumpi\n        /* \"#utility.yul\":1183:1262   */\n      tag_85\n      tag_60\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":1136:1264   */\n    tag_84:\n        /* \"#utility.yul\":717:1270   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1805   */\n    tag_6:\n        /* \"#utility.yul\":1347:1353   */\n      0x00\n        /* \"#utility.yul\":1355:1361   */\n      dup1\n        /* \"#utility.yul\":1404:1406   */\n      0x20\n        /* \"#utility.yul\":1392:1401   */\n      dup4\n        /* \"#utility.yul\":1383:1390   */\n      dup6\n        /* \"#utility.yul\":1379:1402   */\n      sub\n        /* \"#utility.yul\":1375:1407   */\n      slt\n        /* \"#utility.yul\":1372:1491   */\n      iszero\n      tag_87\n      jumpi\n        /* \"#utility.yul\":1410:1489   */\n      tag_88\n      tag_56\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":1372:1491   */\n    tag_87:\n        /* \"#utility.yul\":1558:1559   */\n      0x00\n        /* \"#utility.yul\":1547:1556   */\n      dup4\n        /* \"#utility.yul\":1543:1560   */\n      add\n        /* \"#utility.yul\":1530:1561   */\n      calldataload\n        /* \"#utility.yul\":1588:1606   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1580:1586   */\n      dup2\n        /* \"#utility.yul\":1577:1607   */\n      gt\n        /* \"#utility.yul\":1574:1691   */\n      iszero\n      tag_89\n      jumpi\n        /* \"#utility.yul\":1610:1689   */\n      tag_90\n      tag_57\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":1574:1691   */\n    tag_89:\n        /* \"#utility.yul\":1723:1788   */\n      tag_91\n        /* \"#utility.yul\":1780:1787   */\n      dup6\n        /* \"#utility.yul\":1771:1777   */\n      dup3\n        /* \"#utility.yul\":1760:1769   */\n      dup7\n        /* \"#utility.yul\":1756:1778   */\n      add\n        /* \"#utility.yul\":1723:1788   */\n      tag_61\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":1705:1788   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":1501:1798   */\n      pop\n        /* \"#utility.yul\":1276:1805   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1811:1888   */\n    tag_62:\n        /* \"#utility.yul\":1848:1855   */\n      0x00\n        /* \"#utility.yul\":1877:1882   */\n      dup2\n        /* \"#utility.yul\":1866:1882   */\n      swap1\n      pop\n        /* \"#utility.yul\":1811:1888   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1894:2012   */\n    tag_63:\n        /* \"#utility.yul\":1981:2005   */\n      tag_94\n        /* \"#utility.yul\":1999:2004   */\n      dup2\n        /* \"#utility.yul\":1981:2005   */\n      tag_62\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":1976:1979   */\n      dup3\n        /* \"#utility.yul\":1969:2006   */\n      mstore\n        /* \"#utility.yul\":1894:2012   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2018:2240   */\n    tag_9:\n        /* \"#utility.yul\":2111:2115   */\n      0x00\n        /* \"#utility.yul\":2149:2151   */\n      0x20\n        /* \"#utility.yul\":2138:2147   */\n      dup3\n        /* \"#utility.yul\":2134:2152   */\n      add\n        /* \"#utility.yul\":2126:2152   */\n      swap1\n      pop\n        /* \"#utility.yul\":2162:2233   */\n      tag_96\n        /* \"#utility.yul\":2230:2231   */\n      0x00\n        /* \"#utility.yul\":2219:2228   */\n      dup4\n        /* \"#utility.yul\":2215:2232   */\n      add\n        /* \"#utility.yul\":2206:2212   */\n      dup5\n        /* \"#utility.yul\":2162:2233   */\n      tag_63\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":2018:2240   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2246:2415   */\n    tag_64:\n        /* \"#utility.yul\":2330:2341   */\n      0x00\n        /* \"#utility.yul\":2364:2370   */\n      dup3\n        /* \"#utility.yul\":2359:2362   */\n      dup3\n        /* \"#utility.yul\":2352:2371   */\n      mstore\n        /* \"#utility.yul\":2404:2408   */\n      0x20\n        /* \"#utility.yul\":2399:2402   */\n      dup3\n        /* \"#utility.yul\":2395:2409   */\n      add\n        /* \"#utility.yul\":2380:2409   */\n      swap1\n      pop\n        /* \"#utility.yul\":2246:2415   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2421:2583   */\n    tag_65:\n        /* \"#utility.yul\":2561:2575   */\n      0x456d70747920737472696e670000000000000000000000000000000000000000\n        /* \"#utility.yul\":2557:2558   */\n      0x00\n        /* \"#utility.yul\":2549:2555   */\n      dup3\n        /* \"#utility.yul\":2545:2559   */\n      add\n        /* \"#utility.yul\":2538:2576   */\n      mstore\n        /* \"#utility.yul\":2421:2583   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2589:2955   */\n    tag_66:\n        /* \"#utility.yul\":2731:2734   */\n      0x00\n        /* \"#utility.yul\":2752:2819   */\n      tag_100\n        /* \"#utility.yul\":2816:2818   */\n      0x0c\n        /* \"#utility.yul\":2811:2814   */\n      dup4\n        /* \"#utility.yul\":2752:2819   */\n      tag_64\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":2745:2819   */\n      swap2\n      pop\n        /* \"#utility.yul\":2828:2921   */\n      tag_101\n        /* \"#utility.yul\":2917:2920   */\n      dup3\n        /* \"#utility.yul\":2828:2921   */\n      tag_65\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":2946:2948   */\n      0x20\n        /* \"#utility.yul\":2941:2944   */\n      dup3\n        /* \"#utility.yul\":2937:2949   */\n      add\n        /* \"#utility.yul\":2930:2949   */\n      swap1\n      pop\n        /* \"#utility.yul\":2589:2955   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2961:3380   */\n    tag_13:\n        /* \"#utility.yul\":3127:3131   */\n      0x00\n        /* \"#utility.yul\":3165:3167   */\n      0x20\n        /* \"#utility.yul\":3154:3163   */\n      dup3\n        /* \"#utility.yul\":3150:3168   */\n      add\n        /* \"#utility.yul\":3142:3168   */\n      swap1\n      pop\n        /* \"#utility.yul\":3214:3223   */\n      dup2\n        /* \"#utility.yul\":3208:3212   */\n      dup2\n        /* \"#utility.yul\":3204:3224   */\n      sub\n        /* \"#utility.yul\":3200:3201   */\n      0x00\n        /* \"#utility.yul\":3189:3198   */\n      dup4\n        /* \"#utility.yul\":3185:3202   */\n      add\n        /* \"#utility.yul\":3178:3225   */\n      mstore\n        /* \"#utility.yul\":3242:3373   */\n      tag_103\n        /* \"#utility.yul\":3368:3372   */\n      dup2\n        /* \"#utility.yul\":3242:3373   */\n      tag_66\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":3234:3373   */\n      swap1\n      pop\n        /* \"#utility.yul\":2961:3380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3386:3566   */\n    tag_20:\n        /* \"#utility.yul\":3434:3511   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3431:3432   */\n      0x00\n        /* \"#utility.yul\":3424:3512   */\n      mstore\n        /* \"#utility.yul\":3531:3535   */\n      0x32\n        /* \"#utility.yul\":3528:3529   */\n      0x04\n        /* \"#utility.yul\":3521:3536   */\n      mstore\n        /* \"#utility.yul\":3555:3559   */\n      0x24\n        /* \"#utility.yul\":3552:3553   */\n      0x00\n        /* \"#utility.yul\":3545:3560   */\n      revert\n        /* \"#utility.yul\":3572:3740   */\n    tag_67:\n        /* \"#utility.yul\":3712:3732   */\n      0x496e76616c696420526f6d616e20636861720000000000000000000000000000\n        /* \"#utility.yul\":3708:3709   */\n      0x00\n        /* \"#utility.yul\":3700:3706   */\n      dup3\n        /* \"#utility.yul\":3696:3710   */\n      add\n        /* \"#utility.yul\":3689:3733   */\n      mstore\n        /* \"#utility.yul\":3572:3740   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3746:4112   */\n    tag_68:\n        /* \"#utility.yul\":3888:3891   */\n      0x00\n        /* \"#utility.yul\":3909:3976   */\n      tag_107\n        /* \"#utility.yul\":3973:3975   */\n      0x12\n        /* \"#utility.yul\":3968:3971   */\n      dup4\n        /* \"#utility.yul\":3909:3976   */\n      tag_64\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":3902:3976   */\n      swap2\n      pop\n        /* \"#utility.yul\":3985:4078   */\n      tag_108\n        /* \"#utility.yul\":4074:4077   */\n      dup3\n        /* \"#utility.yul\":3985:4078   */\n      tag_67\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":4103:4105   */\n      0x20\n        /* \"#utility.yul\":4098:4101   */\n      dup3\n        /* \"#utility.yul\":4094:4106   */\n      add\n        /* \"#utility.yul\":4087:4106   */\n      swap1\n      pop\n        /* \"#utility.yul\":3746:4112   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4118:4537   */\n    tag_24:\n        /* \"#utility.yul\":4284:4288   */\n      0x00\n        /* \"#utility.yul\":4322:4324   */\n      0x20\n        /* \"#utility.yul\":4311:4320   */\n      dup3\n        /* \"#utility.yul\":4307:4325   */\n      add\n        /* \"#utility.yul\":4299:4325   */\n      swap1\n      pop\n        /* \"#utility.yul\":4371:4380   */\n      dup2\n        /* \"#utility.yul\":4365:4369   */\n      dup2\n        /* \"#utility.yul\":4361:4381   */\n      sub\n        /* \"#utility.yul\":4357:4358   */\n      0x00\n        /* \"#utility.yul\":4346:4355   */\n      dup4\n        /* \"#utility.yul\":4342:4359   */\n      add\n        /* \"#utility.yul\":4335:4382   */\n      mstore\n        /* \"#utility.yul\":4399:4530   */\n      tag_110\n        /* \"#utility.yul\":4525:4529   */\n      dup2\n        /* \"#utility.yul\":4399:4530   */\n      tag_68\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":4391:4530   */\n      swap1\n      pop\n        /* \"#utility.yul\":4118:4537   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4543:4723   */\n    tag_69:\n        /* \"#utility.yul\":4591:4668   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4588:4589   */\n      0x00\n        /* \"#utility.yul\":4581:4669   */\n      mstore\n        /* \"#utility.yul\":4688:4692   */\n      0x11\n        /* \"#utility.yul\":4685:4686   */\n      0x04\n        /* \"#utility.yul\":4678:4693   */\n      mstore\n        /* \"#utility.yul\":4712:4716   */\n      0x24\n        /* \"#utility.yul\":4709:4710   */\n      0x00\n        /* \"#utility.yul\":4702:4717   */\n      revert\n        /* \"#utility.yul\":4729:4920   */\n    tag_26:\n        /* \"#utility.yul\":4769:4772   */\n      0x00\n        /* \"#utility.yul\":4788:4808   */\n      tag_113\n        /* \"#utility.yul\":4806:4807   */\n      dup3\n        /* \"#utility.yul\":4788:4808   */\n      tag_62\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":4783:4808   */\n      swap2\n      pop\n        /* \"#utility.yul\":4822:4842   */\n      tag_114\n        /* \"#utility.yul\":4840:4841   */\n      dup4\n        /* \"#utility.yul\":4822:4842   */\n      tag_62\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":4817:4842   */\n      swap3\n      pop\n        /* \"#utility.yul\":4865:4866   */\n      dup3\n        /* \"#utility.yul\":4862:4863   */\n      dup3\n        /* \"#utility.yul\":4858:4867   */\n      add\n        /* \"#utility.yul\":4851:4867   */\n      swap1\n      pop\n        /* \"#utility.yul\":4886:4889   */\n      dup1\n        /* \"#utility.yul\":4883:4884   */\n      dup3\n        /* \"#utility.yul\":4880:4890   */\n      gt\n        /* \"#utility.yul\":4877:4913   */\n      iszero\n      tag_115\n      jumpi\n        /* \"#utility.yul\":4893:4911   */\n      tag_116\n      tag_69\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":4877:4913   */\n    tag_115:\n        /* \"#utility.yul\":4729:4920   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4926:5120   */\n    tag_36:\n        /* \"#utility.yul\":4966:4970   */\n      0x00\n        /* \"#utility.yul\":4986:5006   */\n      tag_118\n        /* \"#utility.yul\":5004:5005   */\n      dup3\n        /* \"#utility.yul\":4986:5006   */\n      tag_62\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":4981:5006   */\n      swap2\n      pop\n        /* \"#utility.yul\":5020:5040   */\n      tag_119\n        /* \"#utility.yul\":5038:5039   */\n      dup4\n        /* \"#utility.yul\":5020:5040   */\n      tag_62\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":5015:5040   */\n      swap3\n      pop\n        /* \"#utility.yul\":5064:5065   */\n      dup3\n        /* \"#utility.yul\":5061:5062   */\n      dup3\n        /* \"#utility.yul\":5057:5066   */\n      sub\n        /* \"#utility.yul\":5049:5066   */\n      swap1\n      pop\n        /* \"#utility.yul\":5088:5089   */\n      dup2\n        /* \"#utility.yul\":5082:5086   */\n      dup2\n        /* \"#utility.yul\":5079:5090   */\n      gt\n        /* \"#utility.yul\":5076:5113   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":5093:5111   */\n      tag_121\n      tag_69\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":5076:5113   */\n    tag_120:\n        /* \"#utility.yul\":4926:5120   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5126:5359   */\n    tag_39:\n        /* \"#utility.yul\":5165:5168   */\n      0x00\n        /* \"#utility.yul\":5188:5212   */\n      tag_123\n        /* \"#utility.yul\":5206:5211   */\n      dup3\n        /* \"#utility.yul\":5188:5212   */\n      tag_62\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":5179:5212   */\n      swap2\n      pop\n        /* \"#utility.yul\":5234:5300   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5227:5232   */\n      dup3\n        /* \"#utility.yul\":5224:5301   */\n      sub\n        /* \"#utility.yul\":5221:5324   */\n      tag_124\n      jumpi\n        /* \"#utility.yul\":5304:5322   */\n      tag_125\n      tag_69\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":5221:5324   */\n    tag_124:\n        /* \"#utility.yul\":5351:5352   */\n      0x01\n        /* \"#utility.yul\":5344:5349   */\n      dup3\n        /* \"#utility.yul\":5340:5353   */\n      add\n        /* \"#utility.yul\":5333:5353   */\n      swap1\n      pop\n        /* \"#utility.yul\":5126:5359   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5365:5527   */\n    tag_70:\n        /* \"#utility.yul\":5505:5519   */\n      0x4f7574206f662072616e67650000000000000000000000000000000000000000\n        /* \"#utility.yul\":5501:5502   */\n      0x00\n        /* \"#utility.yul\":5493:5499   */\n      dup3\n        /* \"#utility.yul\":5489:5503   */\n      add\n        /* \"#utility.yul\":5482:5520   */\n      mstore\n        /* \"#utility.yul\":5365:5527   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5533:5899   */\n    tag_71:\n        /* \"#utility.yul\":5675:5678   */\n      0x00\n        /* \"#utility.yul\":5696:5763   */\n      tag_128\n        /* \"#utility.yul\":5760:5762   */\n      0x0c\n        /* \"#utility.yul\":5755:5758   */\n      dup4\n        /* \"#utility.yul\":5696:5763   */\n      tag_64\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":5689:5763   */\n      swap2\n      pop\n        /* \"#utility.yul\":5772:5865   */\n      tag_129\n        /* \"#utility.yul\":5861:5864   */\n      dup3\n        /* \"#utility.yul\":5772:5865   */\n      tag_70\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":5890:5892   */\n      0x20\n        /* \"#utility.yul\":5885:5888   */\n      dup3\n        /* \"#utility.yul\":5881:5893   */\n      add\n        /* \"#utility.yul\":5874:5893   */\n      swap1\n      pop\n        /* \"#utility.yul\":5533:5899   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5905:6324   */\n    tag_46:\n        /* \"#utility.yul\":6071:6075   */\n      0x00\n        /* \"#utility.yul\":6109:6111   */\n      0x20\n        /* \"#utility.yul\":6098:6107   */\n      dup3\n        /* \"#utility.yul\":6094:6112   */\n      add\n        /* \"#utility.yul\":6086:6112   */\n      swap1\n      pop\n        /* \"#utility.yul\":6158:6167   */\n      dup2\n        /* \"#utility.yul\":6152:6156   */\n      dup2\n        /* \"#utility.yul\":6148:6168   */\n      sub\n        /* \"#utility.yul\":6144:6145   */\n      0x00\n        /* \"#utility.yul\":6133:6142   */\n      dup4\n        /* \"#utility.yul\":6129:6146   */\n      add\n        /* \"#utility.yul\":6122:6169   */\n      mstore\n        /* \"#utility.yul\":6186:6317   */\n      tag_131\n        /* \"#utility.yul\":6312:6316   */\n      dup2\n        /* \"#utility.yul\":6186:6317   */\n      tag_71\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":6178:6317   */\n      swap1\n      pop\n        /* \"#utility.yul\":5905:6324   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122067de634a0fb78104dc58da4a2859fd57c1c0b7ed3d546fb26162ead2c5e4fc9764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5061084f8061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c806384df599f1461002d575b5f80fd5b6100476004803603810190610042919061054e565b61005d565b60405161005491906105b1565b60405180910390f35b5f8083838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505090505f8151116100e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100df90610624565b60405180910390fd5b5f5b8151811015610243575f61011a83838151811061010a57610109610642565b5b602001015160f81c60f81b61029b565b90505f811161015e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610155906106b9565b60405180910390fd5b5f835160018461016e9190610704565b10156101eb576101a6846001856101859190610704565b8151811061019657610195610642565b5b602001015160f81c60f81b61029b565b90505f81116101ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e1906106b9565b60405180910390fd5b5b8181111561021f5781816101ff9190610737565b8561020a9190610704565b945082806102179061076a565b93505061022e565b818561022b9190610704565b94505b5050808061023b9061076a565b9150506100ea565b505f821180156102555750610f9f8211155b610294576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028b906107fb565b60405180910390fd5b5092915050565b5f7f4900000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036102ee57600190506104e0565b7f5600000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361034057600590506104e0565b7f5800000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361039257600a90506104e0565b7f4c00000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036103e457603290506104e0565b7f4300000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361043657606490506104e0565b7f4400000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191603610489576101f490506104e0565b7f4d00000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036104dc576103e890506104e0565b5f90505b919050565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261050e5761050d6104ed565b5b8235905067ffffffffffffffff81111561052b5761052a6104f1565b5b602083019150836001820283011115610547576105466104f5565b5b9250929050565b5f8060208385031215610564576105636104e5565b5b5f83013567ffffffffffffffff811115610581576105806104e9565b5b61058d858286016104f9565b92509250509250929050565b5f819050919050565b6105ab81610599565b82525050565b5f6020820190506105c45f8301846105a2565b92915050565b5f82825260208201905092915050565b7f456d70747920737472696e6700000000000000000000000000000000000000005f82015250565b5f61060e600c836105ca565b9150610619826105da565b602082019050919050565b5f6020820190508181035f83015261063b81610602565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f496e76616c696420526f6d616e206368617200000000000000000000000000005f82015250565b5f6106a36012836105ca565b91506106ae8261066f565b602082019050919050565b5f6020820190508181035f8301526106d081610697565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61070e82610599565b915061071983610599565b9250828201905080821115610731576107306106d7565b5b92915050565b5f61074182610599565b915061074c83610599565b9250828203905081811115610764576107636106d7565b5b92915050565b5f61077482610599565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036107a6576107a56106d7565b5b600182019050919050565b7f4f7574206f662072616e676500000000000000000000000000000000000000005f82015250565b5f6107e5600c836105ca565b91506107f0826107b1565b602082019050919050565b5f6020820190508181035f830152610812816107d9565b905091905056fea264697066735822122067de634a0fb78104dc58da4a2859fd57c1c0b7ed3d546fb26162ead2c5e4fc9764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x84F DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84DF599F EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x54E JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x5B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF SWAP1 PUSH2 0x624 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x243 JUMPI PUSH0 PUSH2 0x11A DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x10A JUMPI PUSH2 0x109 PUSH2 0x642 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH2 0x29B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x15E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x155 SWAP1 PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH1 0x1 DUP5 PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x704 JUMP JUMPDEST LT ISZERO PUSH2 0x1EB JUMPI PUSH2 0x1A6 DUP5 PUSH1 0x1 DUP6 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x704 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x196 JUMPI PUSH2 0x195 PUSH2 0x642 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH2 0x29B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E1 SWAP1 PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x21F JUMPI DUP2 DUP2 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x737 JUMP JUMPDEST DUP6 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x704 JUMP JUMPDEST SWAP5 POP DUP3 DUP1 PUSH2 0x217 SWAP1 PUSH2 0x76A JUMP JUMPDEST SWAP4 POP POP PUSH2 0x22E JUMP JUMPDEST DUP2 DUP6 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x704 JUMP JUMPDEST SWAP5 POP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x23B SWAP1 PUSH2 0x76A JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEA JUMP JUMPDEST POP PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x255 JUMPI POP PUSH2 0xF9F DUP3 GT ISZERO JUMPDEST PUSH2 0x294 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28B SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x4900000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x2EE JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x4E0 JUMP JUMPDEST PUSH32 0x5600000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x340 JUMPI PUSH1 0x5 SWAP1 POP PUSH2 0x4E0 JUMP JUMPDEST PUSH32 0x5800000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x392 JUMPI PUSH1 0xA SWAP1 POP PUSH2 0x4E0 JUMP JUMPDEST PUSH32 0x4C00000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x3E4 JUMPI PUSH1 0x32 SWAP1 POP PUSH2 0x4E0 JUMP JUMPDEST PUSH32 0x4300000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x436 JUMPI PUSH1 0x64 SWAP1 POP PUSH2 0x4E0 JUMP JUMPDEST PUSH32 0x4400000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x489 JUMPI PUSH2 0x1F4 SWAP1 POP PUSH2 0x4E0 JUMP JUMPDEST PUSH32 0x4D00000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x4DC JUMPI PUSH2 0x3E8 SWAP1 POP PUSH2 0x4E0 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x50E JUMPI PUSH2 0x50D PUSH2 0x4ED JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x52B JUMPI PUSH2 0x52A PUSH2 0x4F1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x547 JUMPI PUSH2 0x546 PUSH2 0x4F5 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x564 JUMPI PUSH2 0x563 PUSH2 0x4E5 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x581 JUMPI PUSH2 0x580 PUSH2 0x4E9 JUMP JUMPDEST JUMPDEST PUSH2 0x58D DUP6 DUP3 DUP7 ADD PUSH2 0x4F9 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5AB DUP2 PUSH2 0x599 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5C4 PUSH0 DUP4 ADD DUP5 PUSH2 0x5A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x456D70747920737472696E670000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x60E PUSH1 0xC DUP4 PUSH2 0x5CA JUMP JUMPDEST SWAP2 POP PUSH2 0x619 DUP3 PUSH2 0x5DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x63B DUP2 PUSH2 0x602 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x496E76616C696420526F6D616E20636861720000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x6A3 PUSH1 0x12 DUP4 PUSH2 0x5CA JUMP JUMPDEST SWAP2 POP PUSH2 0x6AE DUP3 PUSH2 0x66F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6D0 DUP2 PUSH2 0x697 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x70E DUP3 PUSH2 0x599 JUMP JUMPDEST SWAP2 POP PUSH2 0x719 DUP4 PUSH2 0x599 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x731 JUMPI PUSH2 0x730 PUSH2 0x6D7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x741 DUP3 PUSH2 0x599 JUMP JUMPDEST SWAP2 POP PUSH2 0x74C DUP4 PUSH2 0x599 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x764 JUMPI PUSH2 0x763 PUSH2 0x6D7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x774 DUP3 PUSH2 0x599 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x7A6 JUMPI PUSH2 0x7A5 PUSH2 0x6D7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F7574206F662072616E67650000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x7E5 PUSH1 0xC DUP4 PUSH2 0x5CA JUMP JUMPDEST SWAP2 POP PUSH2 0x7F0 DUP3 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x812 DUP2 PUSH2 0x7D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0xDE634A0FB78104DC PC 0xDA BLOBBASEFEE 0x28 MSIZE REVERT JUMPI 0xC1 0xC0 0xB7 0xED RETURNDATASIZE SLOAD PUSH16 0xB26162EAD2C5E4FC9764736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "60:1393:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_valueOf_164": {
									"entryPoint": 667,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toInteger_112": {
									"entryPoint": 93,
									"id": 112,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_calldata_ptr": {
									"entryPoint": 1273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_calldata_ptr": {
									"entryPoint": 1358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_stringliteral_6b2005212559ce51739b1775b6da741d00937b07ffe1ec66ead8bb05549d13df_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c8de02deba8e639087754d5067b8a43e5887b03be7353558822d412acbff2048_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ee734c0e7102e681b33d6cb9d4d83cc9083cf75e0675e09d107ed6abbe575e30_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_6b2005212559ce51739b1775b6da741d00937b07ffe1ec66ead8bb05549d13df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c8de02deba8e639087754d5067b8a43e5887b03be7353558822d412acbff2048__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ee734c0e7102e681b33d6cb9d4d83cc9083cf75e0675e09d107ed6abbe575e30__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 1898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1751,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1602,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 1265,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1261,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1269,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1257,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1253,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_6b2005212559ce51739b1775b6da741d00937b07ffe1ec66ead8bb05549d13df": {
									"entryPoint": 1647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c8de02deba8e639087754d5067b8a43e5887b03be7353558822d412acbff2048": {
									"entryPoint": 1969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ee734c0e7102e681b33d6cb9d4d83cc9083cf75e0675e09d107ed6abbe575e30": {
									"entryPoint": 1498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6327:1",
										"nodeType": "YulBlock",
										"src": "0:6327:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "423:28:1",
													"nodeType": "YulBlock",
													"src": "423:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:1",
																		"nodeType": "YulLiteral",
																		"src": "440:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:1",
																		"nodeType": "YulLiteral",
																		"src": "443:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:1"
																},
																"nativeSrc": "433:12:1",
																"nodeType": "YulFunctionCall",
																"src": "433:12:1"
															},
															"nativeSrc": "433:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:1"
											},
											{
												"body": {
													"nativeSrc": "546:28:1",
													"nodeType": "YulBlock",
													"src": "546:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:1",
																		"nodeType": "YulLiteral",
																		"src": "563:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:1",
																		"nodeType": "YulLiteral",
																		"src": "566:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:1"
																},
																"nativeSrc": "556:12:1",
																"nodeType": "YulFunctionCall",
																"src": "556:12:1"
															},
															"nativeSrc": "556:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:1"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "457:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:1"
											},
											{
												"body": {
													"nativeSrc": "669:28:1",
													"nodeType": "YulBlock",
													"src": "669:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "686:1:1",
																		"nodeType": "YulLiteral",
																		"src": "686:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "689:1:1",
																		"nodeType": "YulLiteral",
																		"src": "689:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "679:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "679:6:1"
																},
																"nativeSrc": "679:12:1",
																"nodeType": "YulFunctionCall",
																"src": "679:12:1"
															},
															"nativeSrc": "679:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "679:12:1"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "580:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "580:117:1"
											},
											{
												"body": {
													"nativeSrc": "792:478:1",
													"nodeType": "YulBlock",
													"src": "792:478:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "841:83:1",
																"nodeType": "YulBlock",
																"src": "841:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "843:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "843:77:1"
																			},
																			"nativeSrc": "843:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "843:79:1"
																		},
																		"nativeSrc": "843:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "843:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "820:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "820:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "828:4:1",
																						"nodeType": "YulLiteral",
																						"src": "828:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "816:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "816:3:1"
																				},
																				"nativeSrc": "816:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "816:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "835:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "835:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "812:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "812:3:1"
																		},
																		"nativeSrc": "812:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "812:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "805:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "805:6:1"
																},
																"nativeSrc": "805:35:1",
																"nodeType": "YulFunctionCall",
																"src": "805:35:1"
															},
															"nativeSrc": "802:122:1",
															"nodeType": "YulIf",
															"src": "802:122:1"
														},
														{
															"nativeSrc": "933:30:1",
															"nodeType": "YulAssignment",
															"src": "933:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "956:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "943:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "943:12:1"
																},
																"nativeSrc": "943:20:1",
																"nodeType": "YulFunctionCall",
																"src": "943:20:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "933:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "933:6:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1006:83:1",
																"nodeType": "YulBlock",
																"src": "1006:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "1008:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "1008:77:1"
																			},
																			"nativeSrc": "1008:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1008:79:1"
																		},
																		"nativeSrc": "1008:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1008:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "978:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "978:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "986:18:1",
																		"nodeType": "YulLiteral",
																		"src": "986:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "975:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "975:2:1"
																},
																"nativeSrc": "975:30:1",
																"nodeType": "YulFunctionCall",
																"src": "975:30:1"
															},
															"nativeSrc": "972:117:1",
															"nodeType": "YulIf",
															"src": "972:117:1"
														},
														{
															"nativeSrc": "1098:29:1",
															"nodeType": "YulAssignment",
															"src": "1098:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1114:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1114:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1122:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1122:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1110:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1110:3:1"
																},
																"nativeSrc": "1110:17:1",
																"nodeType": "YulFunctionCall",
																"src": "1110:17:1"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "1098:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "1098:8:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1181:83:1",
																"nodeType": "YulBlock",
																"src": "1181:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "1183:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "1183:77:1"
																			},
																			"nativeSrc": "1183:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1183:79:1"
																		},
																		"nativeSrc": "1183:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1183:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "1146:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1146:8:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "1160:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1160:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1168:4:1",
																						"nodeType": "YulLiteral",
																						"src": "1168:4:1",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "1156:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1156:3:1"
																				},
																				"nativeSrc": "1156:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1156:17:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1142:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1142:3:1"
																		},
																		"nativeSrc": "1142:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1142:32:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "1176:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1176:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1139:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1139:2:1"
																},
																"nativeSrc": "1139:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1139:41:1"
															},
															"nativeSrc": "1136:128:1",
															"nodeType": "YulIf",
															"src": "1136:128:1"
														}
													]
												},
												"name": "abi_decode_t_string_calldata_ptr",
												"nativeSrc": "717:553:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "759:6:1",
														"nodeType": "YulTypedName",
														"src": "759:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "767:3:1",
														"nodeType": "YulTypedName",
														"src": "767:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "775:8:1",
														"nodeType": "YulTypedName",
														"src": "775:8:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "785:6:1",
														"nodeType": "YulTypedName",
														"src": "785:6:1",
														"type": ""
													}
												],
												"src": "717:553:1"
											},
											{
												"body": {
													"nativeSrc": "1362:443:1",
													"nodeType": "YulBlock",
													"src": "1362:443:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1408:83:1",
																"nodeType": "YulBlock",
																"src": "1408:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1410:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "1410:77:1"
																			},
																			"nativeSrc": "1410:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1410:79:1"
																		},
																		"nativeSrc": "1410:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1410:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1383:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1383:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1392:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1392:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1379:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1379:3:1"
																		},
																		"nativeSrc": "1379:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1379:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1404:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1404:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1375:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1375:3:1"
																},
																"nativeSrc": "1375:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1375:32:1"
															},
															"nativeSrc": "1372:119:1",
															"nodeType": "YulIf",
															"src": "1372:119:1"
														},
														{
															"nativeSrc": "1501:297:1",
															"nodeType": "YulBlock",
															"src": "1501:297:1",
															"statements": [
																{
																	"nativeSrc": "1516:45:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1516:45:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1547:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1547:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1558:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1558:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1543:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1543:3:1"
																				},
																				"nativeSrc": "1543:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1543:17:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "1530:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "1530:12:1"
																		},
																		"nativeSrc": "1530:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1530:31:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1520:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1520:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "1608:83:1",
																		"nodeType": "YulBlock",
																		"src": "1608:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "1610:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "1610:77:1"
																					},
																					"nativeSrc": "1610:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1610:79:1"
																				},
																				"nativeSrc": "1610:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "1610:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "1580:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1580:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1588:18:1",
																				"nodeType": "YulLiteral",
																				"src": "1588:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1577:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1577:2:1"
																		},
																		"nativeSrc": "1577:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1577:30:1"
																	},
																	"nativeSrc": "1574:117:1",
																	"nodeType": "YulIf",
																	"src": "1574:117:1"
																},
																{
																	"nativeSrc": "1705:83:1",
																	"nodeType": "YulAssignment",
																	"src": "1705:83:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1760:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1760:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1771:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1771:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1756:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1756:3:1"
																				},
																				"nativeSrc": "1756:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1756:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1780:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1780:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_calldata_ptr",
																			"nativeSrc": "1723:32:1",
																			"nodeType": "YulIdentifier",
																			"src": "1723:32:1"
																		},
																		"nativeSrc": "1723:65:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1723:65:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1705:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1705:6:1"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "1713:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1713:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_calldata_ptr",
												"nativeSrc": "1276:529:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1324:9:1",
														"nodeType": "YulTypedName",
														"src": "1324:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1335:7:1",
														"nodeType": "YulTypedName",
														"src": "1335:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1347:6:1",
														"nodeType": "YulTypedName",
														"src": "1347:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1355:6:1",
														"nodeType": "YulTypedName",
														"src": "1355:6:1",
														"type": ""
													}
												],
												"src": "1276:529:1"
											},
											{
												"body": {
													"nativeSrc": "1856:32:1",
													"nodeType": "YulBlock",
													"src": "1856:32:1",
													"statements": [
														{
															"nativeSrc": "1866:16:1",
															"nodeType": "YulAssignment",
															"src": "1866:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "1877:5:1",
																"nodeType": "YulIdentifier",
																"src": "1877:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1866:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1866:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1811:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1838:5:1",
														"nodeType": "YulTypedName",
														"src": "1838:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1848:7:1",
														"nodeType": "YulTypedName",
														"src": "1848:7:1",
														"type": ""
													}
												],
												"src": "1811:77:1"
											},
											{
												"body": {
													"nativeSrc": "1959:53:1",
													"nodeType": "YulBlock",
													"src": "1959:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1976:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1976:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1999:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1999:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1981:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1981:17:1"
																		},
																		"nativeSrc": "1981:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1981:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1969:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1969:6:1"
																},
																"nativeSrc": "1969:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1969:37:1"
															},
															"nativeSrc": "1969:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "1969:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1894:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1947:5:1",
														"nodeType": "YulTypedName",
														"src": "1947:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1954:3:1",
														"nodeType": "YulTypedName",
														"src": "1954:3:1",
														"type": ""
													}
												],
												"src": "1894:118:1"
											},
											{
												"body": {
													"nativeSrc": "2116:124:1",
													"nodeType": "YulBlock",
													"src": "2116:124:1",
													"statements": [
														{
															"nativeSrc": "2126:26:1",
															"nodeType": "YulAssignment",
															"src": "2126:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2138:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2138:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2149:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2149:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2134:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2134:3:1"
																},
																"nativeSrc": "2134:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2134:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2126:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2126:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2206:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2206:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2219:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2219:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2230:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2230:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2215:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2215:3:1"
																		},
																		"nativeSrc": "2215:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2215:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2162:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2162:43:1"
																},
																"nativeSrc": "2162:71:1",
																"nodeType": "YulFunctionCall",
																"src": "2162:71:1"
															},
															"nativeSrc": "2162:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "2162:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2018:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2088:9:1",
														"nodeType": "YulTypedName",
														"src": "2088:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2100:6:1",
														"nodeType": "YulTypedName",
														"src": "2100:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2111:4:1",
														"nodeType": "YulTypedName",
														"src": "2111:4:1",
														"type": ""
													}
												],
												"src": "2018:222:1"
											},
											{
												"body": {
													"nativeSrc": "2342:73:1",
													"nodeType": "YulBlock",
													"src": "2342:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2359:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2359:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2364:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2364:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2352:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2352:6:1"
																},
																"nativeSrc": "2352:19:1",
																"nodeType": "YulFunctionCall",
																"src": "2352:19:1"
															},
															"nativeSrc": "2352:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "2352:19:1"
														},
														{
															"nativeSrc": "2380:29:1",
															"nodeType": "YulAssignment",
															"src": "2380:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2399:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2399:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2404:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2404:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2395:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2395:3:1"
																},
																"nativeSrc": "2395:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2395:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2380:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "2380:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2246:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2314:3:1",
														"nodeType": "YulTypedName",
														"src": "2314:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2319:6:1",
														"nodeType": "YulTypedName",
														"src": "2319:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2330:11:1",
														"nodeType": "YulTypedName",
														"src": "2330:11:1",
														"type": ""
													}
												],
												"src": "2246:169:1"
											},
											{
												"body": {
													"nativeSrc": "2527:56:1",
													"nodeType": "YulBlock",
													"src": "2527:56:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2549:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2549:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2557:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2557:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2545:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2545:3:1"
																		},
																		"nativeSrc": "2545:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2545:14:1"
																	},
																	{
																		"hexValue": "456d70747920737472696e67",
																		"kind": "string",
																		"nativeSrc": "2561:14:1",
																		"nodeType": "YulLiteral",
																		"src": "2561:14:1",
																		"type": "",
																		"value": "Empty string"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2538:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2538:6:1"
																},
																"nativeSrc": "2538:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2538:38:1"
															},
															"nativeSrc": "2538:38:1",
															"nodeType": "YulExpressionStatement",
															"src": "2538:38:1"
														}
													]
												},
												"name": "store_literal_in_memory_ee734c0e7102e681b33d6cb9d4d83cc9083cf75e0675e09d107ed6abbe575e30",
												"nativeSrc": "2421:162:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2519:6:1",
														"nodeType": "YulTypedName",
														"src": "2519:6:1",
														"type": ""
													}
												],
												"src": "2421:162:1"
											},
											{
												"body": {
													"nativeSrc": "2735:220:1",
													"nodeType": "YulBlock",
													"src": "2735:220:1",
													"statements": [
														{
															"nativeSrc": "2745:74:1",
															"nodeType": "YulAssignment",
															"src": "2745:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2811:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2811:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2816:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2816:2:1",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2752:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "2752:58:1"
																},
																"nativeSrc": "2752:67:1",
																"nodeType": "YulFunctionCall",
																"src": "2752:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2745:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2745:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2917:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2917:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ee734c0e7102e681b33d6cb9d4d83cc9083cf75e0675e09d107ed6abbe575e30",
																	"nativeSrc": "2828:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "2828:88:1"
																},
																"nativeSrc": "2828:93:1",
																"nodeType": "YulFunctionCall",
																"src": "2828:93:1"
															},
															"nativeSrc": "2828:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "2828:93:1"
														},
														{
															"nativeSrc": "2930:19:1",
															"nodeType": "YulAssignment",
															"src": "2930:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2941:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2941:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2946:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2946:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2937:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2937:3:1"
																},
																"nativeSrc": "2937:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2937:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2930:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2930:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ee734c0e7102e681b33d6cb9d4d83cc9083cf75e0675e09d107ed6abbe575e30_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2589:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2723:3:1",
														"nodeType": "YulTypedName",
														"src": "2723:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2731:3:1",
														"nodeType": "YulTypedName",
														"src": "2731:3:1",
														"type": ""
													}
												],
												"src": "2589:366:1"
											},
											{
												"body": {
													"nativeSrc": "3132:248:1",
													"nodeType": "YulBlock",
													"src": "3132:248:1",
													"statements": [
														{
															"nativeSrc": "3142:26:1",
															"nodeType": "YulAssignment",
															"src": "3142:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3154:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3154:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3165:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3165:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3150:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3150:3:1"
																},
																"nativeSrc": "3150:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3150:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3142:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3142:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3189:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3189:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3200:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3200:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3185:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3185:3:1"
																		},
																		"nativeSrc": "3185:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3185:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3208:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "3208:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3214:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3214:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3204:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3204:3:1"
																		},
																		"nativeSrc": "3204:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3204:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3178:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3178:6:1"
																},
																"nativeSrc": "3178:47:1",
																"nodeType": "YulFunctionCall",
																"src": "3178:47:1"
															},
															"nativeSrc": "3178:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "3178:47:1"
														},
														{
															"nativeSrc": "3234:139:1",
															"nodeType": "YulAssignment",
															"src": "3234:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3368:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3368:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ee734c0e7102e681b33d6cb9d4d83cc9083cf75e0675e09d107ed6abbe575e30_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3242:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "3242:124:1"
																},
																"nativeSrc": "3242:131:1",
																"nodeType": "YulFunctionCall",
																"src": "3242:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3234:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3234:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ee734c0e7102e681b33d6cb9d4d83cc9083cf75e0675e09d107ed6abbe575e30__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2961:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3112:9:1",
														"nodeType": "YulTypedName",
														"src": "3112:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3127:4:1",
														"nodeType": "YulTypedName",
														"src": "3127:4:1",
														"type": ""
													}
												],
												"src": "2961:419:1"
											},
											{
												"body": {
													"nativeSrc": "3414:152:1",
													"nodeType": "YulBlock",
													"src": "3414:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3431:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3431:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3434:77:1",
																		"nodeType": "YulLiteral",
																		"src": "3434:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3424:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3424:6:1"
																},
																"nativeSrc": "3424:88:1",
																"nodeType": "YulFunctionCall",
																"src": "3424:88:1"
															},
															"nativeSrc": "3424:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "3424:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3528:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3528:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3531:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3531:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3521:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:1"
																},
																"nativeSrc": "3521:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3521:15:1"
															},
															"nativeSrc": "3521:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3521:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3552:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3552:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3555:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3555:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3545:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3545:6:1"
																},
																"nativeSrc": "3545:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3545:15:1"
															},
															"nativeSrc": "3545:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3545:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "3386:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "3386:180:1"
											},
											{
												"body": {
													"nativeSrc": "3678:62:1",
													"nodeType": "YulBlock",
													"src": "3678:62:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3700:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3700:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3708:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3708:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3696:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3696:3:1"
																		},
																		"nativeSrc": "3696:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3696:14:1"
																	},
																	{
																		"hexValue": "496e76616c696420526f6d616e2063686172",
																		"kind": "string",
																		"nativeSrc": "3712:20:1",
																		"nodeType": "YulLiteral",
																		"src": "3712:20:1",
																		"type": "",
																		"value": "Invalid Roman char"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3689:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3689:6:1"
																},
																"nativeSrc": "3689:44:1",
																"nodeType": "YulFunctionCall",
																"src": "3689:44:1"
															},
															"nativeSrc": "3689:44:1",
															"nodeType": "YulExpressionStatement",
															"src": "3689:44:1"
														}
													]
												},
												"name": "store_literal_in_memory_6b2005212559ce51739b1775b6da741d00937b07ffe1ec66ead8bb05549d13df",
												"nativeSrc": "3572:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3670:6:1",
														"nodeType": "YulTypedName",
														"src": "3670:6:1",
														"type": ""
													}
												],
												"src": "3572:168:1"
											},
											{
												"body": {
													"nativeSrc": "3892:220:1",
													"nodeType": "YulBlock",
													"src": "3892:220:1",
													"statements": [
														{
															"nativeSrc": "3902:74:1",
															"nodeType": "YulAssignment",
															"src": "3902:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3968:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3968:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3973:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3973:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3909:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "3909:58:1"
																},
																"nativeSrc": "3909:67:1",
																"nodeType": "YulFunctionCall",
																"src": "3909:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3902:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3902:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4074:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4074:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6b2005212559ce51739b1775b6da741d00937b07ffe1ec66ead8bb05549d13df",
																	"nativeSrc": "3985:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "3985:88:1"
																},
																"nativeSrc": "3985:93:1",
																"nodeType": "YulFunctionCall",
																"src": "3985:93:1"
															},
															"nativeSrc": "3985:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "3985:93:1"
														},
														{
															"nativeSrc": "4087:19:1",
															"nodeType": "YulAssignment",
															"src": "4087:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4098:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4098:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4103:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4103:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4094:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4094:3:1"
																},
																"nativeSrc": "4094:12:1",
																"nodeType": "YulFunctionCall",
																"src": "4094:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4087:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4087:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6b2005212559ce51739b1775b6da741d00937b07ffe1ec66ead8bb05549d13df_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3746:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3880:3:1",
														"nodeType": "YulTypedName",
														"src": "3880:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3888:3:1",
														"nodeType": "YulTypedName",
														"src": "3888:3:1",
														"type": ""
													}
												],
												"src": "3746:366:1"
											},
											{
												"body": {
													"nativeSrc": "4289:248:1",
													"nodeType": "YulBlock",
													"src": "4289:248:1",
													"statements": [
														{
															"nativeSrc": "4299:26:1",
															"nodeType": "YulAssignment",
															"src": "4299:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4311:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4311:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4322:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4322:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4307:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4307:3:1"
																},
																"nativeSrc": "4307:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4307:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4299:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4299:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4346:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4346:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4357:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4357:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4342:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4342:3:1"
																		},
																		"nativeSrc": "4342:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4342:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4365:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "4365:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4371:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4371:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4361:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4361:3:1"
																		},
																		"nativeSrc": "4361:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4361:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4335:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4335:6:1"
																},
																"nativeSrc": "4335:47:1",
																"nodeType": "YulFunctionCall",
																"src": "4335:47:1"
															},
															"nativeSrc": "4335:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "4335:47:1"
														},
														{
															"nativeSrc": "4391:139:1",
															"nodeType": "YulAssignment",
															"src": "4391:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4525:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4525:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6b2005212559ce51739b1775b6da741d00937b07ffe1ec66ead8bb05549d13df_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4399:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "4399:124:1"
																},
																"nativeSrc": "4399:131:1",
																"nodeType": "YulFunctionCall",
																"src": "4399:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4391:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4391:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6b2005212559ce51739b1775b6da741d00937b07ffe1ec66ead8bb05549d13df__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4118:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4269:9:1",
														"nodeType": "YulTypedName",
														"src": "4269:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4284:4:1",
														"nodeType": "YulTypedName",
														"src": "4284:4:1",
														"type": ""
													}
												],
												"src": "4118:419:1"
											},
											{
												"body": {
													"nativeSrc": "4571:152:1",
													"nodeType": "YulBlock",
													"src": "4571:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4588:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4588:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4591:77:1",
																		"nodeType": "YulLiteral",
																		"src": "4591:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4581:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4581:6:1"
																},
																"nativeSrc": "4581:88:1",
																"nodeType": "YulFunctionCall",
																"src": "4581:88:1"
															},
															"nativeSrc": "4581:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "4581:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4685:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4685:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4688:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4688:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4678:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4678:6:1"
																},
																"nativeSrc": "4678:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4678:15:1"
															},
															"nativeSrc": "4678:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "4678:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4709:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4709:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4712:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4712:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4702:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4702:6:1"
																},
																"nativeSrc": "4702:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:1"
															},
															"nativeSrc": "4702:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "4702:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4543:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "4543:180:1"
											},
											{
												"body": {
													"nativeSrc": "4773:147:1",
													"nodeType": "YulBlock",
													"src": "4773:147:1",
													"statements": [
														{
															"nativeSrc": "4783:25:1",
															"nodeType": "YulAssignment",
															"src": "4783:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4806:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4806:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4788:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "4788:17:1"
																},
																"nativeSrc": "4788:20:1",
																"nodeType": "YulFunctionCall",
																"src": "4788:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4783:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "4783:1:1"
																}
															]
														},
														{
															"nativeSrc": "4817:25:1",
															"nodeType": "YulAssignment",
															"src": "4817:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4840:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4840:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4822:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "4822:17:1"
																},
																"nativeSrc": "4822:20:1",
																"nodeType": "YulFunctionCall",
																"src": "4822:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4817:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "4817:1:1"
																}
															]
														},
														{
															"nativeSrc": "4851:16:1",
															"nodeType": "YulAssignment",
															"src": "4851:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4862:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4862:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4865:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4865:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4858:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4858:3:1"
																},
																"nativeSrc": "4858:9:1",
																"nodeType": "YulFunctionCall",
																"src": "4858:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4851:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4851:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4891:22:1",
																"nodeType": "YulBlock",
																"src": "4891:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4893:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4893:16:1"
																			},
																			"nativeSrc": "4893:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4893:18:1"
																		},
																		"nativeSrc": "4893:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4893:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4883:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "4883:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4886:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4886:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4880:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4880:2:1"
																},
																"nativeSrc": "4880:10:1",
																"nodeType": "YulFunctionCall",
																"src": "4880:10:1"
															},
															"nativeSrc": "4877:36:1",
															"nodeType": "YulIf",
															"src": "4877:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4729:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4760:1:1",
														"nodeType": "YulTypedName",
														"src": "4760:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4763:1:1",
														"nodeType": "YulTypedName",
														"src": "4763:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4769:3:1",
														"nodeType": "YulTypedName",
														"src": "4769:3:1",
														"type": ""
													}
												],
												"src": "4729:191:1"
											},
											{
												"body": {
													"nativeSrc": "4971:149:1",
													"nodeType": "YulBlock",
													"src": "4971:149:1",
													"statements": [
														{
															"nativeSrc": "4981:25:1",
															"nodeType": "YulAssignment",
															"src": "4981:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5004:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5004:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4986:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "4986:17:1"
																},
																"nativeSrc": "4986:20:1",
																"nodeType": "YulFunctionCall",
																"src": "4986:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4981:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "4981:1:1"
																}
															]
														},
														{
															"nativeSrc": "5015:25:1",
															"nodeType": "YulAssignment",
															"src": "5015:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5038:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5038:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5020:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "5020:17:1"
																},
																"nativeSrc": "5020:20:1",
																"nodeType": "YulFunctionCall",
																"src": "5020:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5015:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "5015:1:1"
																}
															]
														},
														{
															"nativeSrc": "5049:17:1",
															"nodeType": "YulAssignment",
															"src": "5049:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5061:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5061:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5064:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5064:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5057:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5057:3:1"
																},
																"nativeSrc": "5057:9:1",
																"nodeType": "YulFunctionCall",
																"src": "5057:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5049:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5049:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5091:22:1",
																"nodeType": "YulBlock",
																"src": "5091:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5093:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5093:16:1"
																			},
																			"nativeSrc": "5093:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5093:18:1"
																		},
																		"nativeSrc": "5093:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5093:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5082:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5082:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5088:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5088:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5079:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5079:2:1"
																},
																"nativeSrc": "5079:11:1",
																"nodeType": "YulFunctionCall",
																"src": "5079:11:1"
															},
															"nativeSrc": "5076:37:1",
															"nodeType": "YulIf",
															"src": "5076:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4926:194:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4957:1:1",
														"nodeType": "YulTypedName",
														"src": "4957:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4960:1:1",
														"nodeType": "YulTypedName",
														"src": "4960:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4966:4:1",
														"nodeType": "YulTypedName",
														"src": "4966:4:1",
														"type": ""
													}
												],
												"src": "4926:194:1"
											},
											{
												"body": {
													"nativeSrc": "5169:190:1",
													"nodeType": "YulBlock",
													"src": "5169:190:1",
													"statements": [
														{
															"nativeSrc": "5179:33:1",
															"nodeType": "YulAssignment",
															"src": "5179:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5206:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5206:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5188:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "5188:17:1"
																},
																"nativeSrc": "5188:24:1",
																"nodeType": "YulFunctionCall",
																"src": "5188:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5179:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "5179:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5302:22:1",
																"nodeType": "YulBlock",
																"src": "5302:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5304:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5304:16:1"
																			},
																			"nativeSrc": "5304:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5304:18:1"
																		},
																		"nativeSrc": "5304:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5304:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5227:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5227:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5234:66:1",
																		"nodeType": "YulLiteral",
																		"src": "5234:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5224:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5224:2:1"
																},
																"nativeSrc": "5224:77:1",
																"nodeType": "YulFunctionCall",
																"src": "5224:77:1"
															},
															"nativeSrc": "5221:103:1",
															"nodeType": "YulIf",
															"src": "5221:103:1"
														},
														{
															"nativeSrc": "5333:20:1",
															"nodeType": "YulAssignment",
															"src": "5333:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5344:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5344:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5351:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5351:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5340:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5340:3:1"
																},
																"nativeSrc": "5340:13:1",
																"nodeType": "YulFunctionCall",
																"src": "5340:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5333:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5333:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "5126:233:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5155:5:1",
														"nodeType": "YulTypedName",
														"src": "5155:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5165:3:1",
														"nodeType": "YulTypedName",
														"src": "5165:3:1",
														"type": ""
													}
												],
												"src": "5126:233:1"
											},
											{
												"body": {
													"nativeSrc": "5471:56:1",
													"nodeType": "YulBlock",
													"src": "5471:56:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5493:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5493:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5501:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5501:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5489:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5489:3:1"
																		},
																		"nativeSrc": "5489:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5489:14:1"
																	},
																	{
																		"hexValue": "4f7574206f662072616e6765",
																		"kind": "string",
																		"nativeSrc": "5505:14:1",
																		"nodeType": "YulLiteral",
																		"src": "5505:14:1",
																		"type": "",
																		"value": "Out of range"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5482:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5482:6:1"
																},
																"nativeSrc": "5482:38:1",
																"nodeType": "YulFunctionCall",
																"src": "5482:38:1"
															},
															"nativeSrc": "5482:38:1",
															"nodeType": "YulExpressionStatement",
															"src": "5482:38:1"
														}
													]
												},
												"name": "store_literal_in_memory_c8de02deba8e639087754d5067b8a43e5887b03be7353558822d412acbff2048",
												"nativeSrc": "5365:162:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5463:6:1",
														"nodeType": "YulTypedName",
														"src": "5463:6:1",
														"type": ""
													}
												],
												"src": "5365:162:1"
											},
											{
												"body": {
													"nativeSrc": "5679:220:1",
													"nodeType": "YulBlock",
													"src": "5679:220:1",
													"statements": [
														{
															"nativeSrc": "5689:74:1",
															"nodeType": "YulAssignment",
															"src": "5689:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5755:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5755:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5760:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5760:2:1",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5696:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "5696:58:1"
																},
																"nativeSrc": "5696:67:1",
																"nodeType": "YulFunctionCall",
																"src": "5696:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5689:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5689:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5861:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5861:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c8de02deba8e639087754d5067b8a43e5887b03be7353558822d412acbff2048",
																	"nativeSrc": "5772:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "5772:88:1"
																},
																"nativeSrc": "5772:93:1",
																"nodeType": "YulFunctionCall",
																"src": "5772:93:1"
															},
															"nativeSrc": "5772:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "5772:93:1"
														},
														{
															"nativeSrc": "5874:19:1",
															"nodeType": "YulAssignment",
															"src": "5874:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5885:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5885:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5890:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5890:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5881:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5881:3:1"
																},
																"nativeSrc": "5881:12:1",
																"nodeType": "YulFunctionCall",
																"src": "5881:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5874:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5874:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c8de02deba8e639087754d5067b8a43e5887b03be7353558822d412acbff2048_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5533:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5667:3:1",
														"nodeType": "YulTypedName",
														"src": "5667:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5675:3:1",
														"nodeType": "YulTypedName",
														"src": "5675:3:1",
														"type": ""
													}
												],
												"src": "5533:366:1"
											},
											{
												"body": {
													"nativeSrc": "6076:248:1",
													"nodeType": "YulBlock",
													"src": "6076:248:1",
													"statements": [
														{
															"nativeSrc": "6086:26:1",
															"nodeType": "YulAssignment",
															"src": "6086:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6098:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6098:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6109:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6109:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6094:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6094:3:1"
																},
																"nativeSrc": "6094:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6094:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6086:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6086:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6133:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6133:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6144:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6144:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6129:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6129:3:1"
																		},
																		"nativeSrc": "6129:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6129:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6152:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "6152:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6158:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6158:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6148:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6148:3:1"
																		},
																		"nativeSrc": "6148:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6148:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6122:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6122:6:1"
																},
																"nativeSrc": "6122:47:1",
																"nodeType": "YulFunctionCall",
																"src": "6122:47:1"
															},
															"nativeSrc": "6122:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "6122:47:1"
														},
														{
															"nativeSrc": "6178:139:1",
															"nodeType": "YulAssignment",
															"src": "6178:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6312:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "6312:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c8de02deba8e639087754d5067b8a43e5887b03be7353558822d412acbff2048_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6186:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "6186:124:1"
																},
																"nativeSrc": "6186:131:1",
																"nodeType": "YulFunctionCall",
																"src": "6186:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6178:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6178:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c8de02deba8e639087754d5067b8a43e5887b03be7353558822d412acbff2048__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5905:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6056:9:1",
														"nodeType": "YulTypedName",
														"src": "6056:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6071:4:1",
														"nodeType": "YulTypedName",
														"src": "6071:4:1",
														"type": ""
													}
												],
												"src": "5905:419:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ee734c0e7102e681b33d6cb9d4d83cc9083cf75e0675e09d107ed6abbe575e30(memPtr) {\n\n        mstore(add(memPtr, 0), \"Empty string\")\n\n    }\n\n    function abi_encode_t_stringliteral_ee734c0e7102e681b33d6cb9d4d83cc9083cf75e0675e09d107ed6abbe575e30_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_ee734c0e7102e681b33d6cb9d4d83cc9083cf75e0675e09d107ed6abbe575e30(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ee734c0e7102e681b33d6cb9d4d83cc9083cf75e0675e09d107ed6abbe575e30__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ee734c0e7102e681b33d6cb9d4d83cc9083cf75e0675e09d107ed6abbe575e30_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_6b2005212559ce51739b1775b6da741d00937b07ffe1ec66ead8bb05549d13df(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Roman char\")\n\n    }\n\n    function abi_encode_t_stringliteral_6b2005212559ce51739b1775b6da741d00937b07ffe1ec66ead8bb05549d13df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_6b2005212559ce51739b1775b6da741d00937b07ffe1ec66ead8bb05549d13df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6b2005212559ce51739b1775b6da741d00937b07ffe1ec66ead8bb05549d13df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6b2005212559ce51739b1775b6da741d00937b07ffe1ec66ead8bb05549d13df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_c8de02deba8e639087754d5067b8a43e5887b03be7353558822d412acbff2048(memPtr) {\n\n        mstore(add(memPtr, 0), \"Out of range\")\n\n    }\n\n    function abi_encode_t_stringliteral_c8de02deba8e639087754d5067b8a43e5887b03be7353558822d412acbff2048_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_c8de02deba8e639087754d5067b8a43e5887b03be7353558822d412acbff2048(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c8de02deba8e639087754d5067b8a43e5887b03be7353558822d412acbff2048__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c8de02deba8e639087754d5067b8a43e5887b03be7353558822d412acbff2048_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610029575f3560e01c806384df599f1461002d575b5f80fd5b6100476004803603810190610042919061054e565b61005d565b60405161005491906105b1565b60405180910390f35b5f8083838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505090505f8151116100e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100df90610624565b60405180910390fd5b5f5b8151811015610243575f61011a83838151811061010a57610109610642565b5b602001015160f81c60f81b61029b565b90505f811161015e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610155906106b9565b60405180910390fd5b5f835160018461016e9190610704565b10156101eb576101a6846001856101859190610704565b8151811061019657610195610642565b5b602001015160f81c60f81b61029b565b90505f81116101ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e1906106b9565b60405180910390fd5b5b8181111561021f5781816101ff9190610737565b8561020a9190610704565b945082806102179061076a565b93505061022e565b818561022b9190610704565b94505b5050808061023b9061076a565b9150506100ea565b505f821180156102555750610f9f8211155b610294576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028b906107fb565b60405180910390fd5b5092915050565b5f7f4900000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036102ee57600190506104e0565b7f5600000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361034057600590506104e0565b7f5800000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361039257600a90506104e0565b7f4c00000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036103e457603290506104e0565b7f4300000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19160361043657606490506104e0565b7f4400000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191603610489576101f490506104e0565b7f4d00000000000000000000000000000000000000000000000000000000000000827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036104dc576103e890506104e0565b5f90505b919050565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261050e5761050d6104ed565b5b8235905067ffffffffffffffff81111561052b5761052a6104f1565b5b602083019150836001820283011115610547576105466104f5565b5b9250929050565b5f8060208385031215610564576105636104e5565b5b5f83013567ffffffffffffffff811115610581576105806104e9565b5b61058d858286016104f9565b92509250509250929050565b5f819050919050565b6105ab81610599565b82525050565b5f6020820190506105c45f8301846105a2565b92915050565b5f82825260208201905092915050565b7f456d70747920737472696e6700000000000000000000000000000000000000005f82015250565b5f61060e600c836105ca565b9150610619826105da565b602082019050919050565b5f6020820190508181035f83015261063b81610602565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f496e76616c696420526f6d616e206368617200000000000000000000000000005f82015250565b5f6106a36012836105ca565b91506106ae8261066f565b602082019050919050565b5f6020820190508181035f8301526106d081610697565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61070e82610599565b915061071983610599565b9250828201905080821115610731576107306106d7565b5b92915050565b5f61074182610599565b915061074c83610599565b9250828203905081811115610764576107636106d7565b5b92915050565b5f61077482610599565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036107a6576107a56106d7565b5b600182019050919050565b7f4f7574206f662072616e676500000000000000000000000000000000000000005f82015250565b5f6107e5600c836105ca565b91506107f0826107b1565b602082019050919050565b5f6020820190508181035f830152610812816107d9565b905091905056fea264697066735822122067de634a0fb78104dc58da4a2859fd57c1c0b7ed3d546fb26162ead2c5e4fc9764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84DF599F EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x54E JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x5B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF SWAP1 PUSH2 0x624 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x243 JUMPI PUSH0 PUSH2 0x11A DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x10A JUMPI PUSH2 0x109 PUSH2 0x642 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH2 0x29B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x15E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x155 SWAP1 PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH1 0x1 DUP5 PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x704 JUMP JUMPDEST LT ISZERO PUSH2 0x1EB JUMPI PUSH2 0x1A6 DUP5 PUSH1 0x1 DUP6 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x704 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x196 JUMPI PUSH2 0x195 PUSH2 0x642 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH2 0x29B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E1 SWAP1 PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x21F JUMPI DUP2 DUP2 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x737 JUMP JUMPDEST DUP6 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x704 JUMP JUMPDEST SWAP5 POP DUP3 DUP1 PUSH2 0x217 SWAP1 PUSH2 0x76A JUMP JUMPDEST SWAP4 POP POP PUSH2 0x22E JUMP JUMPDEST DUP2 DUP6 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x704 JUMP JUMPDEST SWAP5 POP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x23B SWAP1 PUSH2 0x76A JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEA JUMP JUMPDEST POP PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x255 JUMPI POP PUSH2 0xF9F DUP3 GT ISZERO JUMPDEST PUSH2 0x294 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28B SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x4900000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x2EE JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x4E0 JUMP JUMPDEST PUSH32 0x5600000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x340 JUMPI PUSH1 0x5 SWAP1 POP PUSH2 0x4E0 JUMP JUMPDEST PUSH32 0x5800000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x392 JUMPI PUSH1 0xA SWAP1 POP PUSH2 0x4E0 JUMP JUMPDEST PUSH32 0x4C00000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x3E4 JUMPI PUSH1 0x32 SWAP1 POP PUSH2 0x4E0 JUMP JUMPDEST PUSH32 0x4300000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x436 JUMPI PUSH1 0x64 SWAP1 POP PUSH2 0x4E0 JUMP JUMPDEST PUSH32 0x4400000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x489 JUMPI PUSH2 0x1F4 SWAP1 POP PUSH2 0x4E0 JUMP JUMPDEST PUSH32 0x4D00000000000000000000000000000000000000000000000000000000000000 DUP3 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0x4DC JUMPI PUSH2 0x3E8 SWAP1 POP PUSH2 0x4E0 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x50E JUMPI PUSH2 0x50D PUSH2 0x4ED JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x52B JUMPI PUSH2 0x52A PUSH2 0x4F1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x547 JUMPI PUSH2 0x546 PUSH2 0x4F5 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x564 JUMPI PUSH2 0x563 PUSH2 0x4E5 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x581 JUMPI PUSH2 0x580 PUSH2 0x4E9 JUMP JUMPDEST JUMPDEST PUSH2 0x58D DUP6 DUP3 DUP7 ADD PUSH2 0x4F9 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5AB DUP2 PUSH2 0x599 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5C4 PUSH0 DUP4 ADD DUP5 PUSH2 0x5A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x456D70747920737472696E670000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x60E PUSH1 0xC DUP4 PUSH2 0x5CA JUMP JUMPDEST SWAP2 POP PUSH2 0x619 DUP3 PUSH2 0x5DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x63B DUP2 PUSH2 0x602 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x496E76616C696420526F6D616E20636861720000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x6A3 PUSH1 0x12 DUP4 PUSH2 0x5CA JUMP JUMPDEST SWAP2 POP PUSH2 0x6AE DUP3 PUSH2 0x66F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6D0 DUP2 PUSH2 0x697 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x70E DUP3 PUSH2 0x599 JUMP JUMPDEST SWAP2 POP PUSH2 0x719 DUP4 PUSH2 0x599 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x731 JUMPI PUSH2 0x730 PUSH2 0x6D7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x741 DUP3 PUSH2 0x599 JUMP JUMPDEST SWAP2 POP PUSH2 0x74C DUP4 PUSH2 0x599 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x764 JUMPI PUSH2 0x763 PUSH2 0x6D7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x774 DUP3 PUSH2 0x599 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x7A6 JUMPI PUSH2 0x7A5 PUSH2 0x6D7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F7574206F662072616E67650000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x7E5 PUSH1 0xC DUP4 PUSH2 0x5CA JUMP JUMPDEST SWAP2 POP PUSH2 0x7F0 DUP3 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x812 DUP2 PUSH2 0x7D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0xDE634A0FB78104DC PC 0xDA BLOBBASEFEE 0x28 MSIZE REVERT JUMPI 0xC1 0xC0 0xB7 0xED RETURNDATASIZE SLOAD PUSH16 0xB26162EAD2C5E4FC9764736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "60:1393:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;91:960;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;156:13;182:14;205:5;;182:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;241:1;230;:8;:12;222:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;326:9;321:604;345:1;:8;341:1;:12;321:604;;;375:12;390:14;399:1;401;399:4;;;;;;;;:::i;:::-;;;;;;;;;;390:8;:14::i;:::-;375:29;;434:1;427:4;:8;419:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;475:12;518:1;:8;514:1;510;:5;;;;:::i;:::-;:16;506:140;;;554:18;563:1;569;565;:5;;;;:::i;:::-;563:8;;;;;;;;:::i;:::-;;;;;;;;;;554;:18::i;:::-;547:25;;606:1;599:4;:8;591:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;506:140;756:4;749;:11;745:169;;;798:4;791;:11;;;;:::i;:::-;781:22;;;;;:::i;:::-;;;822:3;;;;;:::i;:::-;;;;745:169;;;894:4;885:13;;;;;:::i;:::-;;;745:169;360:565;;355:3;;;;;:::i;:::-;;;;321:604;;;;1008:1;1000:5;:9;:26;;;;;1022:4;1013:5;:13;;1000:26;992:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;171:880;91:960;;;;:::o;1107:343::-;1158:7;1182:8;:1;:8;;;;1178:22;;1199:1;1192:8;;;;1178:22;1215:8;:1;:8;;;;1211:22;;1232:1;1225:8;;;;1211:22;1248:8;:1;:8;;;;1244:23;;1265:2;1258:9;;;;1244:23;1282:8;:1;:8;;;;1278:23;;1299:2;1292:9;;;;1278:23;1316:8;:1;:8;;;;1312:24;;1333:3;1326:10;;;;1312:24;1351:8;:1;:8;;;;1347:24;;1368:3;1361:10;;;;1347:24;1386:8;:1;:8;;;;1382:25;;1403:4;1396:11;;;;1382:25;1425:1;1418:8;;1107:343;;;;:::o;88:117:1:-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:117;689:1;686;679:12;717:553;775:8;785:6;835:3;828:4;820:6;816:17;812:27;802:122;;843:79;;:::i;:::-;802:122;956:6;943:20;933:30;;986:18;978:6;975:30;972:117;;;1008:79;;:::i;:::-;972:117;1122:4;1114:6;1110:17;1098:29;;1176:3;1168:4;1160:6;1156:17;1146:8;1142:32;1139:41;1136:128;;;1183:79;;:::i;:::-;1136:128;717:553;;;;;:::o;1276:529::-;1347:6;1355;1404:2;1392:9;1383:7;1379:23;1375:32;1372:119;;;1410:79;;:::i;:::-;1372:119;1558:1;1547:9;1543:17;1530:31;1588:18;1580:6;1577:30;1574:117;;;1610:79;;:::i;:::-;1574:117;1723:65;1780:7;1771:6;1760:9;1756:22;1723:65;:::i;:::-;1705:83;;;;1501:297;1276:529;;;;;:::o;1811:77::-;1848:7;1877:5;1866:16;;1811:77;;;:::o;1894:118::-;1981:24;1999:5;1981:24;:::i;:::-;1976:3;1969:37;1894:118;;:::o;2018:222::-;2111:4;2149:2;2138:9;2134:18;2126:26;;2162:71;2230:1;2219:9;2215:17;2206:6;2162:71;:::i;:::-;2018:222;;;;:::o;2246:169::-;2330:11;2364:6;2359:3;2352:19;2404:4;2399:3;2395:14;2380:29;;2246:169;;;;:::o;2421:162::-;2561:14;2557:1;2549:6;2545:14;2538:38;2421:162;:::o;2589:366::-;2731:3;2752:67;2816:2;2811:3;2752:67;:::i;:::-;2745:74;;2828:93;2917:3;2828:93;:::i;:::-;2946:2;2941:3;2937:12;2930:19;;2589:366;;;:::o;2961:419::-;3127:4;3165:2;3154:9;3150:18;3142:26;;3214:9;3208:4;3204:20;3200:1;3189:9;3185:17;3178:47;3242:131;3368:4;3242:131;:::i;:::-;3234:139;;2961:419;;;:::o;3386:180::-;3434:77;3431:1;3424:88;3531:4;3528:1;3521:15;3555:4;3552:1;3545:15;3572:168;3712:20;3708:1;3700:6;3696:14;3689:44;3572:168;:::o;3746:366::-;3888:3;3909:67;3973:2;3968:3;3909:67;:::i;:::-;3902:74;;3985:93;4074:3;3985:93;:::i;:::-;4103:2;4098:3;4094:12;4087:19;;3746:366;;;:::o;4118:419::-;4284:4;4322:2;4311:9;4307:18;4299:26;;4371:9;4365:4;4361:20;4357:1;4346:9;4342:17;4335:47;4399:131;4525:4;4399:131;:::i;:::-;4391:139;;4118:419;;;:::o;4543:180::-;4591:77;4588:1;4581:88;4688:4;4685:1;4678:15;4712:4;4709:1;4702:15;4729:191;4769:3;4788:20;4806:1;4788:20;:::i;:::-;4783:25;;4822:20;4840:1;4822:20;:::i;:::-;4817:25;;4865:1;4862;4858:9;4851:16;;4886:3;4883:1;4880:10;4877:36;;;4893:18;;:::i;:::-;4877:36;4729:191;;;;:::o;4926:194::-;4966:4;4986:20;5004:1;4986:20;:::i;:::-;4981:25;;5020:20;5038:1;5020:20;:::i;:::-;5015:25;;5064:1;5061;5057:9;5049:17;;5088:1;5082:4;5079:11;5076:37;;;5093:18;;:::i;:::-;5076:37;4926:194;;;;:::o;5126:233::-;5165:3;5188:24;5206:5;5188:24;:::i;:::-;5179:33;;5234:66;5227:5;5224:77;5221:103;;5304:18;;:::i;:::-;5221:103;5351:1;5344:5;5340:13;5333:20;;5126:233;;;:::o;5365:162::-;5505:14;5501:1;5493:6;5489:14;5482:38;5365:162;:::o;5533:366::-;5675:3;5696:67;5760:2;5755:3;5696:67;:::i;:::-;5689:74;;5772:93;5861:3;5772:93;:::i;:::-;5890:2;5885:3;5881:12;5874:19;;5533:366;;;:::o;5905:419::-;6071:4;6109:2;6098:9;6094:18;6086:26;;6158:9;6152:4;6148:20;6144:1;6133:9;6129:17;6122:47;6186:131;6312:4;6186:131;:::i;:::-;6178:139;;5905:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "425400",
								"executionCost": "459",
								"totalCost": "425859"
							},
							"external": {
								"toInteger(string)": "infinite"
							},
							"internal": {
								"_valueOf(bytes1)": "262"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 1453,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 1453,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 1453,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1453,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1453,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1453,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1453,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 1453,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1453,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 1453,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1453,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1453,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 1453,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1453,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1453,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 1453,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1453,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 1453,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 1453,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1453,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 1453,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122067de634a0fb78104dc58da4a2859fd57c1c0b7ed3d546fb26162ead2c5e4fc9764736f6c634300081a0033",
									".code": [
										{
											"begin": 60,
											"end": 1453,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "PUSH",
											"source": 0,
											"value": "84DF599F"
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1453,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 91,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 91,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 91,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 156,
											"end": 169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 182,
											"end": 196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 205,
											"end": 210,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 205,
											"end": 210,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 182,
											"end": 211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 182,
											"end": 211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 182,
											"end": 211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 182,
											"end": 211,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 182,
											"end": 211,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 182,
											"end": 211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 182,
											"end": 211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 182,
											"end": 211,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 182,
											"end": 211,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 182,
											"end": 211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 241,
											"end": 242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 230,
											"end": 238,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 230,
											"end": 242,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 222,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 222,
											"end": 259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 222,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 222,
											"end": 259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 222,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 222,
											"end": 259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 222,
											"end": 259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 222,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 222,
											"end": 259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 222,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 222,
											"end": 259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 222,
											"end": 259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 222,
											"end": 259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 222,
											"end": 259,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 222,
											"end": 259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 222,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 222,
											"end": 259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 222,
											"end": 259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 222,
											"end": 259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 222,
											"end": 259,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 222,
											"end": 259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 222,
											"end": 259,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 222,
											"end": 259,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 222,
											"end": 259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 326,
											"end": 335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 925,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 321,
											"end": 925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 345,
											"end": 346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 345,
											"end": 353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 341,
											"end": 342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 341,
											"end": 353,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 321,
											"end": 925,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 321,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 321,
											"end": 925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 375,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 390,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 399,
											"end": 400,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 401,
											"end": 402,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 399,
											"end": 403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 399,
											"end": 403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 399,
											"end": 403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 399,
											"end": 403,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 399,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 399,
											"end": 403,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 399,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 399,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 399,
											"end": 403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 399,
											"end": 403,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 399,
											"end": 403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 399,
											"end": 403,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 399,
											"end": 403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 399,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 399,
											"end": 403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 399,
											"end": 403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 399,
											"end": 403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 399,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 399,
											"end": 403,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 399,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 399,
											"end": 403,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 390,
											"end": 398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 390,
											"end": 404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 390,
											"end": 404,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 390,
											"end": 404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 375,
											"end": 404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 375,
											"end": 404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 434,
											"end": 435,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 427,
											"end": 435,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 419,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 419,
											"end": 458,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 419,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 419,
											"end": 458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 419,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 419,
											"end": 458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 419,
											"end": 458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 419,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 419,
											"end": 458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 419,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 419,
											"end": 458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 419,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 419,
											"end": 458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 419,
											"end": 458,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 419,
											"end": 458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 419,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 419,
											"end": 458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 419,
											"end": 458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 419,
											"end": 458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 419,
											"end": 458,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 419,
											"end": 458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 419,
											"end": 458,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 419,
											"end": 458,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 419,
											"end": 458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 475,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 518,
											"end": 519,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 518,
											"end": 526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 514,
											"end": 515,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 510,
											"end": 511,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 510,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 510,
											"end": 515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 510,
											"end": 515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 510,
											"end": 515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 510,
											"end": 515,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 510,
											"end": 515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 510,
											"end": 526,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 506,
											"end": 646,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 506,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 506,
											"end": 646,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 554,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 563,
											"end": 564,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 569,
											"end": 570,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 565,
											"end": 566,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 565,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 565,
											"end": 570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 565,
											"end": 570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 565,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 565,
											"end": 570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 565,
											"end": 570,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 565,
											"end": 570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 563,
											"end": 571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 563,
											"end": 571,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 563,
											"end": 571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 563,
											"end": 571,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 563,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 563,
											"end": 571,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 563,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 563,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 563,
											"end": 571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 563,
											"end": 571,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 563,
											"end": 571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 563,
											"end": 571,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 563,
											"end": 571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 563,
											"end": 571,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 563,
											"end": 571,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 563,
											"end": 571,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 563,
											"end": 571,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 563,
											"end": 571,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 563,
											"end": 571,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 563,
											"end": 571,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 563,
											"end": 571,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 554,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 554,
											"end": 572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 554,
											"end": 572,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 554,
											"end": 572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 547,
											"end": 572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 547,
											"end": 572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 606,
											"end": 607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 599,
											"end": 603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 599,
											"end": 607,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 591,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 591,
											"end": 630,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 591,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 591,
											"end": 630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 591,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 591,
											"end": 630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 591,
											"end": 630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 591,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 591,
											"end": 630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 591,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 591,
											"end": 630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 591,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 591,
											"end": 630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 591,
											"end": 630,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 591,
											"end": 630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 591,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 591,
											"end": 630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 591,
											"end": 630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 591,
											"end": 630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 591,
											"end": 630,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 591,
											"end": 630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 591,
											"end": 630,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 591,
											"end": 630,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 591,
											"end": 630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 506,
											"end": 646,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 506,
											"end": 646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 756,
											"end": 760,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 749,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 749,
											"end": 760,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 745,
											"end": 914,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 745,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 745,
											"end": 914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 798,
											"end": 802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 791,
											"end": 795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 791,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 791,
											"end": 802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 791,
											"end": 802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 791,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 791,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 791,
											"end": 802,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 791,
											"end": 802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 781,
											"end": 803,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 781,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 781,
											"end": 803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 781,
											"end": 803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 781,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 781,
											"end": 803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 781,
											"end": 803,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 781,
											"end": 803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 781,
											"end": 803,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 781,
											"end": 803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 825,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 822,
											"end": 825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 822,
											"end": 825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 822,
											"end": 825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 825,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 822,
											"end": 825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 822,
											"end": 825,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 822,
											"end": 825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 822,
											"end": 825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 745,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 914,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 745,
											"end": 914,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 745,
											"end": 914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 894,
											"end": 898,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 885,
											"end": 898,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 885,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 885,
											"end": 898,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 885,
											"end": 898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 885,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 885,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 885,
											"end": 898,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 885,
											"end": 898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 885,
											"end": 898,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 885,
											"end": 898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 745,
											"end": 914,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 360,
											"end": 925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 360,
											"end": 925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 355,
											"end": 358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 355,
											"end": 358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 355,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 355,
											"end": 358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 355,
											"end": 358,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 355,
											"end": 358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 355,
											"end": 358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 355,
											"end": 358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 355,
											"end": 358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 321,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 321,
											"end": 925,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 321,
											"end": 925,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 321,
											"end": 925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 321,
											"end": 925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1008,
											"end": 1009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 1005,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1009,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1026,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1000,
											"end": 1026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1022,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "F9F"
										},
										{
											"begin": 1013,
											"end": 1018,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1026,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1026,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1000,
											"end": 1026,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1000,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 992,
											"end": 1043,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 992,
											"end": 1043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1043,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 992,
											"end": 1043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1043,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1043,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 992,
											"end": 1043,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 992,
											"end": 1043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 992,
											"end": 1043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1043,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 992,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 992,
											"end": 1043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1043,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1043,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 992,
											"end": 1043,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 992,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 171,
											"end": 1051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 91,
											"end": 1051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 91,
											"end": 1051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1450,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1107,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1165,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1182,
											"end": 1190,
											"name": "PUSH",
											"source": 0,
											"value": "4900000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1182,
											"end": 1183,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1182,
											"end": 1190,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1182,
											"end": 1190,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1182,
											"end": 1190,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1182,
											"end": 1190,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1178,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1178,
											"end": 1200,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1200,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1192,
											"end": 1200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1192,
											"end": 1200,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1178,
											"end": 1200,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1178,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1223,
											"name": "PUSH",
											"source": 0,
											"value": "5600000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1223,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1215,
											"end": 1223,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1223,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1232,
											"end": 1233,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1225,
											"end": 1233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1225,
											"end": 1233,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1256,
											"name": "PUSH",
											"source": 0,
											"value": "5800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1248,
											"end": 1249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1256,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1256,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1256,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1256,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1244,
											"end": 1267,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1265,
											"end": 1267,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1258,
											"end": 1267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1258,
											"end": 1267,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1267,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1244,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1290,
											"name": "PUSH",
											"source": 0,
											"value": "4C00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1282,
											"end": 1283,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1290,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1282,
											"end": 1290,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1290,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1278,
											"end": 1301,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1301,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1292,
											"end": 1301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1301,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1292,
											"end": 1301,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1301,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1278,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1324,
											"name": "PUSH",
											"source": 0,
											"value": "4300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1316,
											"end": 1317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1324,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1316,
											"end": 1324,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1324,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1316,
											"end": 1324,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1333,
											"end": 1336,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1326,
											"end": 1336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1326,
											"end": 1336,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1312,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1359,
											"name": "PUSH",
											"source": 0,
											"value": "4400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1351,
											"end": 1352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1359,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1359,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1359,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1359,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1347,
											"end": 1371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1368,
											"end": 1371,
											"name": "PUSH",
											"source": 0,
											"value": "1F4"
										},
										{
											"begin": 1361,
											"end": 1371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1361,
											"end": 1371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1361,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1361,
											"end": 1371,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1347,
											"end": 1371,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1347,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1394,
											"name": "PUSH",
											"source": 0,
											"value": "4D00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1386,
											"end": 1387,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1394,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1386,
											"end": 1394,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1386,
											"end": 1394,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1382,
											"end": 1407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 1396,
											"end": 1407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1396,
											"end": 1407,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1407,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1382,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1425,
											"end": 1426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1418,
											"end": 1426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1450,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1107,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1450,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1107,
											"end": 1450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 457,
											"end": 574,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 457,
											"end": 574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 566,
											"end": 567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 564,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 556,
											"end": 568,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 580,
											"end": 697,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 580,
											"end": 697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 689,
											"end": 690,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 687,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 679,
											"end": 691,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 717,
											"end": 1270,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 717,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 775,
											"end": 783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 791,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 838,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 828,
											"end": 832,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 820,
											"end": 826,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 816,
											"end": 833,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 812,
											"end": 839,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 802,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 802,
											"end": 924,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 843,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 843,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 843,
											"end": 922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 843,
											"end": 922,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 843,
											"end": 922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 802,
											"end": 924,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 802,
											"end": 924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 943,
											"end": 963,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 933,
											"end": 963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 933,
											"end": 963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 986,
											"end": 1004,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 978,
											"end": 984,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1005,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1089,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 972,
											"end": 1089,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1008,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1008,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1008,
											"end": 1087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1008,
											"end": 1087,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1008,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1089,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 972,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1122,
											"end": 1126,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1114,
											"end": 1120,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1127,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1127,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1179,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1172,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1160,
											"end": 1166,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1173,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1154,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1142,
											"end": 1174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1180,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1264,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1136,
											"end": 1264,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1183,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1183,
											"end": 1262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1262,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1183,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1264,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1136,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 717,
											"end": 1270,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 717,
											"end": 1270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 717,
											"end": 1270,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 717,
											"end": 1270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 717,
											"end": 1270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 717,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1805,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1276,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1355,
											"end": 1361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1406,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1392,
											"end": 1401,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1390,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1402,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1407,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1372,
											"end": 1491,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1372,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1372,
											"end": 1491,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1410,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1410,
											"end": 1489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1489,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1410,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1372,
											"end": 1491,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1372,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1547,
											"end": 1556,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1543,
											"end": 1560,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1606,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1580,
											"end": 1586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1691,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1574,
											"end": 1691,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1610,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1610,
											"end": 1689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1689,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1610,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1691,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1574,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1780,
											"end": 1787,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1769,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1723,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1788,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1723,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1705,
											"end": 1788,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1705,
											"end": 1788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1705,
											"end": 1788,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1705,
											"end": 1788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1501,
											"end": 1798,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1805,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1805,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1811,
											"end": 1888,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1811,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1855,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1877,
											"end": 1882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1811,
											"end": 1888,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1811,
											"end": 1888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1811,
											"end": 1888,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1811,
											"end": 1888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 2012,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1894,
											"end": 2012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1999,
											"end": 2004,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1981,
											"end": 2005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2005,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1981,
											"end": 2005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2006,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 2012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 2012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 2012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2240,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2018,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2149,
											"end": 2151,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2134,
											"end": 2152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2230,
											"end": 2231,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2219,
											"end": 2228,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2215,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2206,
											"end": 2212,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2162,
											"end": 2233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2233,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2162,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2240,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2240,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2415,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2246,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2330,
											"end": 2341,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2370,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2359,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2352,
											"end": 2371,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2404,
											"end": 2408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2399,
											"end": 2402,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2395,
											"end": 2409,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 2409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 2409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2415,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2583,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2421,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2561,
											"end": 2575,
											"name": "PUSH",
											"source": 1,
											"value": "456D70747920737472696E670000000000000000000000000000000000000000"
										},
										{
											"begin": 2557,
											"end": 2558,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2549,
											"end": 2555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2545,
											"end": 2559,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2576,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2955,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2589,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 2734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2752,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2816,
											"end": 2818,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 2811,
											"end": 2814,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2752,
											"end": 2819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2819,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2752,
											"end": 2819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2745,
											"end": 2819,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2745,
											"end": 2819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2828,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2917,
											"end": 2920,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2828,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2828,
											"end": 2921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2828,
											"end": 2921,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2828,
											"end": 2921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2946,
											"end": 2948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2941,
											"end": 2944,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 2949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2949,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2955,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2955,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2955,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3380,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2961,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3131,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3165,
											"end": 3167,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3154,
											"end": 3163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3214,
											"end": 3223,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3212,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3204,
											"end": 3224,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3200,
											"end": 3201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3189,
											"end": 3198,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3202,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3368,
											"end": 3372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3242,
											"end": 3373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3373,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3242,
											"end": 3373,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3234,
											"end": 3373,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3234,
											"end": 3373,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3380,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 3380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3386,
											"end": 3566,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3386,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3434,
											"end": 3511,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3431,
											"end": 3432,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3424,
											"end": 3512,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3531,
											"end": 3535,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3528,
											"end": 3529,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3521,
											"end": 3536,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3555,
											"end": 3559,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3552,
											"end": 3553,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3545,
											"end": 3560,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3572,
											"end": 3740,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3572,
											"end": 3740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3712,
											"end": 3732,
											"name": "PUSH",
											"source": 1,
											"value": "496E76616C696420526F6D616E20636861720000000000000000000000000000"
										},
										{
											"begin": 3708,
											"end": 3709,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3700,
											"end": 3706,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3696,
											"end": 3710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3572,
											"end": 3740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3572,
											"end": 3740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 4112,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3746,
											"end": 4112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3888,
											"end": 3891,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3909,
											"end": 3976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3973,
											"end": 3975,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3968,
											"end": 3971,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 3976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3909,
											"end": 3976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 3976,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3909,
											"end": 3976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 3976,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 3976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3985,
											"end": 4078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4074,
											"end": 4077,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3985,
											"end": 4078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3985,
											"end": 4078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3985,
											"end": 4078,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3985,
											"end": 4078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4105,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4098,
											"end": 4101,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4094,
											"end": 4106,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 4112,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 4112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 4112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 4112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4118,
											"end": 4537,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4118,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4284,
											"end": 4288,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4322,
											"end": 4324,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4311,
											"end": 4320,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4299,
											"end": 4325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4299,
											"end": 4325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4371,
											"end": 4380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4369,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4361,
											"end": 4381,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4358,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4346,
											"end": 4355,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4342,
											"end": 4359,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4335,
											"end": 4382,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4525,
											"end": 4529,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 4399,
											"end": 4530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4530,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4399,
											"end": 4530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4391,
											"end": 4530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4391,
											"end": 4530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4118,
											"end": 4537,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4118,
											"end": 4537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4118,
											"end": 4537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4118,
											"end": 4537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4543,
											"end": 4723,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 4543,
											"end": 4723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4591,
											"end": 4668,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4588,
											"end": 4589,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4581,
											"end": 4669,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4685,
											"end": 4686,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4678,
											"end": 4693,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4716,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4709,
											"end": 4710,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4702,
											"end": 4717,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4729,
											"end": 4920,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4729,
											"end": 4920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4772,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4788,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4806,
											"end": 4807,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4788,
											"end": 4808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4808,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4788,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 4808,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 4808,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4840,
											"end": 4841,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4822,
											"end": 4842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4822,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4817,
											"end": 4842,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4817,
											"end": 4842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 4866,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4862,
											"end": 4863,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 4867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4889,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4883,
											"end": 4884,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4880,
											"end": 4890,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 4913,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 4913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4877,
											"end": 4913,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4893,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4893,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 4893,
											"end": 4911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4893,
											"end": 4911,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4893,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 4913,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4877,
											"end": 4913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4729,
											"end": 4920,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4729,
											"end": 4920,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4729,
											"end": 4920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4729,
											"end": 4920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4729,
											"end": 4920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4926,
											"end": 5120,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4926,
											"end": 5120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4986,
											"end": 5006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 5004,
											"end": 5005,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4986,
											"end": 5006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4986,
											"end": 5006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4986,
											"end": 5006,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 4986,
											"end": 5006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4981,
											"end": 5006,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4981,
											"end": 5006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5038,
											"end": 5039,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5020,
											"end": 5040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5040,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5020,
											"end": 5040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5015,
											"end": 5040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5065,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5061,
											"end": 5062,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5066,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5049,
											"end": 5066,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5049,
											"end": 5066,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5088,
											"end": 5089,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5082,
											"end": 5086,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5079,
											"end": 5090,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5113,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5076,
											"end": 5113,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5093,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5093,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 5093,
											"end": 5111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5093,
											"end": 5111,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5093,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5113,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5076,
											"end": 5113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4926,
											"end": 5120,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4926,
											"end": 5120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4926,
											"end": 5120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4926,
											"end": 5120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4926,
											"end": 5120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5126,
											"end": 5359,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5126,
											"end": 5359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5165,
											"end": 5168,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5188,
											"end": 5212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5206,
											"end": 5211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5188,
											"end": 5212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5212,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5188,
											"end": 5212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5179,
											"end": 5212,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5179,
											"end": 5212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5234,
											"end": 5300,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5227,
											"end": 5232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5224,
											"end": 5301,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5221,
											"end": 5324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5221,
											"end": 5324,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 5304,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 5304,
											"end": 5322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5322,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 5304,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5221,
											"end": 5324,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5221,
											"end": 5324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5351,
											"end": 5352,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5344,
											"end": 5349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5340,
											"end": 5353,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5353,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5126,
											"end": 5359,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5126,
											"end": 5359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5126,
											"end": 5359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5126,
											"end": 5359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5365,
											"end": 5527,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 5365,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5519,
											"name": "PUSH",
											"source": 1,
											"value": "4F7574206F662072616E67650000000000000000000000000000000000000000"
										},
										{
											"begin": 5501,
											"end": 5502,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5493,
											"end": 5499,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5489,
											"end": 5503,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5482,
											"end": 5520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5365,
											"end": 5527,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5365,
											"end": 5527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5533,
											"end": 5899,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5533,
											"end": 5899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5675,
											"end": 5678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5696,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 5760,
											"end": 5762,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 5755,
											"end": 5758,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5696,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5696,
											"end": 5763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5696,
											"end": 5763,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 5696,
											"end": 5763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5689,
											"end": 5763,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5689,
											"end": 5763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5772,
											"end": 5865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 5861,
											"end": 5864,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5772,
											"end": 5865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 5772,
											"end": 5865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5772,
											"end": 5865,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 5772,
											"end": 5865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5890,
											"end": 5892,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5885,
											"end": 5888,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5881,
											"end": 5893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5874,
											"end": 5893,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5874,
											"end": 5893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5533,
											"end": 5899,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5533,
											"end": 5899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5533,
											"end": 5899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5533,
											"end": 5899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5905,
											"end": 6324,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 5905,
											"end": 6324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6071,
											"end": 6075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6109,
											"end": 6111,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6098,
											"end": 6107,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6094,
											"end": 6112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6086,
											"end": 6112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6086,
											"end": 6112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6158,
											"end": 6167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6152,
											"end": 6156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6168,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6144,
											"end": 6145,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6133,
											"end": 6142,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6129,
											"end": 6146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6122,
											"end": 6169,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6186,
											"end": 6317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 6312,
											"end": 6316,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6186,
											"end": 6317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 6186,
											"end": 6317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6186,
											"end": 6317,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 6186,
											"end": 6317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6178,
											"end": 6317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6178,
											"end": 6317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5905,
											"end": 6324,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5905,
											"end": 6324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5905,
											"end": 6324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5905,
											"end": 6324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/RomanToInteger.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"toInteger(string)": "84df599f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"roman\",\"type\":\"string\"}],\"name\":\"toInteger\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RomanToInteger.sol\":\"RomanToInteger\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/RomanToInteger.sol\":{\"keccak256\":\"0xdbf10bac8f742402bf3fef73560086c9f6e36b60294d32eeb5144dbd22536490\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d309f34fcd98a3b6bd5d467db0685b45b2e1b9c19087a40e63084fa38c3ec02\",\"dweb:/ipfs/Qmaq2ySJhFQVBfN22D3LQuRJ8C7NPDvJsHi8qQeAdo9DzK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/RomanToInteger.sol": {
				"ast": {
					"absolutePath": "contracts/RomanToInteger.sol",
					"exportedSymbols": {
						"RomanToInteger": [
							165
						]
					},
					"id": 166,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "RomanToInteger",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 165,
							"linearizedBaseContracts": [
								165
							],
							"name": "RomanToInteger",
							"nameLocation": "69:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "171:880:0",
										"statements": [
											{
												"assignments": [
													9
												],
												"declarations": [
													{
														"constant": false,
														"id": 9,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "195:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 111,
														"src": "182:14:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 8,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "182:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 14,
												"initialValue": {
													"arguments": [
														{
															"id": 12,
															"name": "roman",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "205:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														],
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "199:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 10,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "199:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "199:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "182:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 16,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "230:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "232:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "230:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "241:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "230:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456d70747920737472696e67",
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "244:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ee734c0e7102e681b33d6cb9d4d83cc9083cf75e0675e09d107ed6abbe575e30",
																"typeString": "literal_string \"Empty string\""
															},
															"value": "Empty string"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ee734c0e7102e681b33d6cb9d4d83cc9083cf75e0675e09d107ed6abbe575e30",
																"typeString": "literal_string \"Empty string\""
															}
														],
														"id": 15,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "222:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "222:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "222:37:0"
											},
											{
												"body": {
													"id": 98,
													"nodeType": "Block",
													"src": "360:565:0",
													"statements": [
														{
															"assignments": [
																35
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 35,
																	"mutability": "mutable",
																	"name": "curr",
																	"nameLocation": "383:4:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 98,
																	"src": "375:12:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 34,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "375:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 41,
															"initialValue": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 37,
																			"name": "s",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 9,
																			"src": "399:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 39,
																		"indexExpression": {
																			"id": 38,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "401:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "399:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes1",
																			"typeString": "bytes1"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes1",
																			"typeString": "bytes1"
																		}
																	],
																	"id": 36,
																	"name": "_valueOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "390:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes1_$returns$_t_uint256_$",
																		"typeString": "function (bytes1) pure returns (uint256)"
																	}
																},
																"id": 40,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "390:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "375:29:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 45,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 43,
																			"name": "curr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 35,
																			"src": "427:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 44,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "434:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "427:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e76616c696420526f6d616e2063686172",
																		"id": 46,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "437:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_6b2005212559ce51739b1775b6da741d00937b07ffe1ec66ead8bb05549d13df",
																			"typeString": "literal_string \"Invalid Roman char\""
																		},
																		"value": "Invalid Roman char"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_6b2005212559ce51739b1775b6da741d00937b07ffe1ec66ead8bb05549d13df",
																			"typeString": "literal_string \"Invalid Roman char\""
																		}
																	],
																	"id": 42,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "419:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 47,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "419:39:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 48,
															"nodeType": "ExpressionStatement",
															"src": "419:39:0"
														},
														{
															"assignments": [
																50
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 50,
																	"mutability": "mutable",
																	"name": "next",
																	"nameLocation": "483:4:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 98,
																	"src": "475:12:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 49,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "475:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 52,
															"initialValue": {
																"hexValue": "30",
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "490:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "475:16:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 53,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 24,
																		"src": "510:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 54,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "514:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "510:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 56,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "518:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "520:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "518:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "510:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 77,
															"nodeType": "IfStatement",
															"src": "506:140:0",
															"trueBody": {
																"id": 76,
																"nodeType": "Block",
																"src": "528:118:0",
																"statements": [
																	{
																		"expression": {
																			"id": 67,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 59,
																				"name": "next",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 50,
																				"src": "547:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"baseExpression": {
																							"id": 61,
																							"name": "s",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 9,
																							"src": "563:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 65,
																						"indexExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 64,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 62,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 24,
																								"src": "565:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"hexValue": "31",
																								"id": 63,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "569:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"src": "565:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "563:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes1",
																							"typeString": "bytes1"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes1",
																							"typeString": "bytes1"
																						}
																					],
																					"id": 60,
																					"name": "_valueOf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 164,
																					"src": "554:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes1_$returns$_t_uint256_$",
																						"typeString": "function (bytes1) pure returns (uint256)"
																					}
																				},
																				"id": 66,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "554:18:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "547:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 68,
																		"nodeType": "ExpressionStatement",
																		"src": "547:25:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 72,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 70,
																						"name": "next",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 50,
																						"src": "599:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 71,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "606:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "599:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "496e76616c696420526f6d616e2063686172",
																					"id": 73,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "609:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_6b2005212559ce51739b1775b6da741d00937b07ffe1ec66ead8bb05549d13df",
																						"typeString": "literal_string \"Invalid Roman char\""
																					},
																					"value": "Invalid Roman char"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_6b2005212559ce51739b1775b6da741d00937b07ffe1ec66ead8bb05549d13df",
																						"typeString": "literal_string \"Invalid Roman char\""
																					}
																				],
																				"id": 69,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "591:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 74,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "591:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 75,
																		"nodeType": "ExpressionStatement",
																		"src": "591:39:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 78,
																	"name": "next",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 50,
																	"src": "749:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 79,
																	"name": "curr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "756:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "749:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 96,
																"nodeType": "Block",
																"src": "866:48:0",
																"statements": [
																	{
																		"expression": {
																			"id": 94,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 92,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 6,
																				"src": "885:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 93,
																				"name": "curr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 35,
																				"src": "894:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "885:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 95,
																		"nodeType": "ExpressionStatement",
																		"src": "885:13:0"
																	}
																]
															},
															"id": 97,
															"nodeType": "IfStatement",
															"src": "745:169:0",
															"trueBody": {
																"id": 91,
																"nodeType": "Block",
																"src": "762:98:0",
																"statements": [
																	{
																		"expression": {
																			"id": 86,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 81,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 6,
																				"src": "781:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 84,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 82,
																							"name": "next",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 50,
																							"src": "791:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 83,
																							"name": "curr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 35,
																							"src": "798:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "791:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 85,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "790:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "781:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 87,
																		"nodeType": "ExpressionStatement",
																		"src": "781:22:0"
																	},
																	{
																		"expression": {
																			"id": 89,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "822:3:0",
																			"subExpression": {
																				"id": 88,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "822:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 90,
																		"nodeType": "ExpressionStatement",
																		"src": "822:3:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 27,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "341:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 28,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "345:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "347:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "345:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "341:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 99,
												"initializationExpression": {
													"assignments": [
														24
													],
													"declarations": [
														{
															"constant": false,
															"id": 24,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "334:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 99,
															"src": "326:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 23,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "326:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 26,
													"initialValue": {
														"hexValue": "30",
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "338:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "326:13:0"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "355:3:0",
														"subExpression": {
															"id": 31,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "355:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 33,
													"nodeType": "ExpressionStatement",
													"src": "355:3:0"
												},
												"nodeType": "ForStatement",
												"src": "321:604:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 101,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "1000:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1008:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1000:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 104,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "1013:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "33393939",
																	"id": 105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1022:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3999_by_1",
																		"typeString": "int_const 3999"
																	},
																	"value": "3999"
																},
																"src": "1013:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1000:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f7574206f662072616e6765",
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1028:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8de02deba8e639087754d5067b8a43e5887b03be7353558822d412acbff2048",
																"typeString": "literal_string \"Out of range\""
															},
															"value": "Out of range"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8de02deba8e639087754d5067b8a43e5887b03be7353558822d412acbff2048",
																"typeString": "literal_string \"Out of range\""
															}
														],
														"id": 100,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "992:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "992:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "992:51:0"
											}
										]
									},
									"functionSelector": "84df599f",
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInteger",
									"nameLocation": "100:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "roman",
												"nameLocation": "126:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "110:21:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "110:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "109:23:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "164:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "156:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "156:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "155:15:0"
									},
									"scope": 165,
									"src": "91:960:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "1167:283:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 119,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "1182:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "49",
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1187:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_8d61ecf6e15472e15b1a0f63cd77f62aa57e6edcd3871d7a841f1056fb42b216",
															"typeString": "literal_string \"I\""
														},
														"value": "I"
													},
													"src": "1182:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 124,
												"nodeType": "IfStatement",
												"src": "1178:22:0",
												"trueBody": {
													"expression": {
														"hexValue": "31",
														"id": 122,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1199:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"functionReturnParameters": 118,
													"id": 123,
													"nodeType": "Return",
													"src": "1192:8:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 125,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "1215:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "56",
														"id": 126,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1220:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_f0da850a6b7c61a66cdd43ac7529affc6000442af1c1bdda1db3bb7220bf7613",
															"typeString": "literal_string \"V\""
														},
														"value": "V"
													},
													"src": "1215:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 130,
												"nodeType": "IfStatement",
												"src": "1211:22:0",
												"trueBody": {
													"expression": {
														"hexValue": "35",
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1232:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"functionReturnParameters": 118,
													"id": 129,
													"nodeType": "Return",
													"src": "1225:8:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 131,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "1248:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "58",
														"id": 132,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1253:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_550c64a15031c3064454c19adc6243a6122c138a242eaa098da50bb114fc8d56",
															"typeString": "literal_string \"X\""
														},
														"value": "X"
													},
													"src": "1248:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 136,
												"nodeType": "IfStatement",
												"src": "1244:23:0",
												"trueBody": {
													"expression": {
														"hexValue": "3130",
														"id": 134,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1265:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"functionReturnParameters": 118,
													"id": 135,
													"nodeType": "Return",
													"src": "1258:9:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 137,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "1282:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "4c",
														"id": 138,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1287:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_8aa64f937099b65a4febc243a5ae0f2d6416bb9e473c30dd29c1ee498fb7c5a8",
															"typeString": "literal_string \"L\""
														},
														"value": "L"
													},
													"src": "1282:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 142,
												"nodeType": "IfStatement",
												"src": "1278:23:0",
												"trueBody": {
													"expression": {
														"hexValue": "3530",
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1299:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_50_by_1",
															"typeString": "int_const 50"
														},
														"value": "50"
													},
													"functionReturnParameters": 118,
													"id": 141,
													"nodeType": "Return",
													"src": "1292:9:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 143,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "1316:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "43",
														"id": 144,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1321:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_017e667f4b8c174291d1543c466717566e206df1bfd6f30271055ddafdb18f72",
															"typeString": "literal_string \"C\""
														},
														"value": "C"
													},
													"src": "1316:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "IfStatement",
												"src": "1312:24:0",
												"trueBody": {
													"expression": {
														"hexValue": "313030",
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1333:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"functionReturnParameters": 118,
													"id": 147,
													"nodeType": "Return",
													"src": "1326:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 149,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "1351:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "44",
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1356:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_6c3fd336b49dcb1c57dd4fbeaf5f898320b0da06a5ef64e798c6497600bb79f2",
															"typeString": "literal_string \"D\""
														},
														"value": "D"
													},
													"src": "1351:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 154,
												"nodeType": "IfStatement",
												"src": "1347:24:0",
												"trueBody": {
													"expression": {
														"hexValue": "353030",
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1368:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_500_by_1",
															"typeString": "int_const 500"
														},
														"value": "500"
													},
													"functionReturnParameters": 118,
													"id": 153,
													"nodeType": "Return",
													"src": "1361:10:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 155,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "1386:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "4d",
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1391:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7d61fdc86cb928ea48fbf22d28ed5341c2e6a2599c550270b824b71dfa078d06",
															"typeString": "literal_string \"M\""
														},
														"value": "M"
													},
													"src": "1386:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 160,
												"nodeType": "IfStatement",
												"src": "1382:25:0",
												"trueBody": {
													"expression": {
														"hexValue": "31303030",
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1403:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"functionReturnParameters": 118,
													"id": 159,
													"nodeType": "Return",
													"src": "1396:11:0"
												}
											},
											{
												"expression": {
													"hexValue": "30",
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1425:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 118,
												"id": 162,
												"nodeType": "Return",
												"src": "1418:8:0"
											}
										]
									},
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_valueOf",
									"nameLocation": "1116:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "c",
												"nameLocation": "1132:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1125:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 113,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "1125:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1124:10:0"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1158:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1157:9:0"
									},
									"scope": 165,
									"src": "1107:343:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 166,
							"src": "60:1393:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1420:0"
				},
				"id": 0
			}
		}
	}
}